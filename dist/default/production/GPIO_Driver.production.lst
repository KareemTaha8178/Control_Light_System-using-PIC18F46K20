

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 02 15:00:18 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,inline
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,inline
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4620 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   0017A8                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _port_register
    71   0017A8  80                 	db	128
    72   0017A9  0F                 	db	15
    73   0017AA  81                 	db	129
    74   0017AB  0F                 	db	15
    75   0017AC  82                 	db	130
    76   0017AD  0F                 	db	15
    77   0017AE  83                 	db	131
    78   0017AF  0F                 	db	15
    79   0017B0  84                 	db	132
    80   0017B1  0F                 	db	15
    81                           
    82                           ;initializer for _lat_register
    83   0017B2  89                 	db	137
    84   0017B3  0F                 	db	15
    85   0017B4  8A                 	db	138
    86   0017B5  0F                 	db	15
    87   0017B6  8B                 	db	139
    88   0017B7  0F                 	db	15
    89   0017B8  8C                 	db	140
    90   0017B9  0F                 	db	15
    91   0017BA  8D                 	db	141
    92   0017BB  0F                 	db	15
    93                           
    94                           ;initializer for _tris_register
    95   0017BC  92                 	db	146
    96   0017BD  0F                 	db	15
    97   0017BE  93                 	db	147
    98   0017BF  0F                 	db	15
    99   0017C0  94                 	db	148
   100   0017C1  0F                 	db	15
   101   0017C2  95                 	db	149
   102   0017C3  0F                 	db	15
   103   0017C4  96                 	db	150
   104   0017C5  0F                 	db	15
   105                           
   106                           ;initializer for _ret
   107   0017C6  01                 	db	1
   108                           
   109                           ;initializer for _adc_1
   110   0017C7  00                 	db	0
   111   0017C8  00                 	db	0
   112   0017C9  05                 	db	5
   113   0017CA  05                 	db	5
   114   0017CB  00                 	db	0
   115   0017CC  02                 	db	2
   116                           
   117                           ;initializer for _pin_3
   118   0017CD  52                 	db	82
   119                           
   120                           ;initializer for _pin_2
   121   0017CE  4A                 	db	74
   122                           
   123                           ;initializer for _pin_1
   124   0017CF  02                 	db	2
   125                           
   126                           	psect	smallconst
   127   001000                     __psmallconst:
   128                           	callstack 0
   129   001000  00                 	db	0
   130   001001  37                 	db	55
   131   001002  38                 	db	56
   132   001003  39                 	db	57
   133   001004  2F                 	db	47
   134   001005  34                 	db	52
   135   001006  35                 	db	53
   136   001007  36                 	db	54
   137   001008  2A                 	db	42
   138   001009  31                 	db	49
   139   00100A  32                 	db	50
   140   00100B  33                 	db	51
   141   00100C  2D                 	db	45
   142   00100D  23                 	db	35
   143   00100E  30                 	db	48
   144   00100F  3D                 	db	61
   145   001010  2B                 	db	43
   146   001011                     __end_of_btn_values:
   147                           	callstack 0
   148   000000                     _ADCON1bits	set	4033
   149   000000                     _ADRESL	set	4035
   150   000000                     _ADRESH	set	4036
   151   000000                     _TRISD	set	3989
   152   000000                     _TRISC	set	3988
   153   000000                     _TRISB	set	3987
   154   000000                     _TRISE	set	3990
   155   001011                     STR_1:
   156   001011  25                 	db	37
   157   001012  69                 	db	105	;'i'
   158   001013  00                 	db	0
   159   001014  00                 	db	0	; dummy byte at the end
   160   000000                     
   161                           	psect	nvCOMRAM
   162   000052                     __pnvCOMRAM:
   163                           	callstack 0
   164   000052                     _logic_Ouput_sensor:
   165                           	callstack 0
   166   000052                     	ds	1
   167   000053                     _logic_input_sensor:
   168                           	callstack 0
   169   000053                     	ds	1
   170   000000                     _ADCON2bits	set	4032
   171   000000                     _ADCON0bits	set	4034
   172   000000                     _PORTE	set	3972
   173   000000                     _PORTD	set	3971
   174   000000                     _PORTC	set	3970
   175   000000                     _PORTB	set	3969
   176   000000                     _PORTA	set	3968
   177   000000                     _LATA	set	3977
   178   000000                     _TRISA	set	3986
   179   000000                     _LATE	set	3981
   180   000000                     _LATD	set	3980
   181   000000                     _LATC	set	3979
   182   000000                     _LATB	set	3978
   183                           
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   001746                     __pcinit:
   188                           	callstack 0
   189   001746                     start_initialization:
   190                           	callstack 0
   191   001746                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Initialize objects allocated to COMRAM (40 bytes)
   195                           ; load TBLPTR registers with __pidataCOMRAM
   196   001746  0EA8               	movlw	low __pidataCOMRAM
   197   001748  6EF6               	movwf	tblptrl,c
   198   00174A  0E17               	movlw	high __pidataCOMRAM
   199   00174C  6EF7               	movwf	tblptrh,c
   200   00174E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   201   001750  6EF8               	movwf	tblptru,c
   202   001752  EE00  F001         	lfsr	0,__pdataCOMRAM
   203   001756  EE10 F028          	lfsr	1,40
   204   00175A                     copy_data0:
   205   00175A  0009               	tblrd		*+
   206   00175C  CFF5 FFEE          	movff	tablat,postinc0
   207   001760  50E5               	movf	postdec1,w,c
   208   001762  50E1               	movf	fsr1l,w,c
   209   001764  E1FA               	bnz	copy_data0
   210                           
   211                           ; Clear objects allocated to COMRAM (26 bytes)
   212   001766  EE00  F029         	lfsr	0,__pbssCOMRAM
   213   00176A  0E1A               	movlw	26
   214   00176C                     clear_0:
   215   00176C  6AEE               	clrf	postinc0,c
   216   00176E  06E8               	decf	wreg,f,c
   217   001770  E1FD               	bnz	clear_0
   218   001772                     end_of_initialization:
   219                           	callstack 0
   220   001772                     __end_of__initialization:
   221                           	callstack 0
   222   001772  0100               	movlb	0
   223   001774  EF61  F009         	goto	_main	;jump to C main() function
   224                           
   225                           	psect	bssCOMRAM
   226   000029                     __pbssCOMRAM:
   227                           	callstack 0
   228   000029                     _number_of_students:
   229                           	callstack 0
   230   000029                     	ds	2
   231   00002B                     _adc_result4:
   232                           	callstack 0
   233   00002B                     	ds	2
   234   00002D                     _adc_result3:
   235                           	callstack 0
   236   00002D                     	ds	2
   237   00002F                     _adc_result2:
   238                           	callstack 0
   239   00002F                     	ds	2
   240   000031                     _adc_conversion_status:
   241                           	callstack 0
   242   000031                     	ds	1
   243   000032                     relay_turn_off@F3047:
   244                           	callstack 0
   245   000032                     	ds	1
   246   000033                     relay_turn_on@F3042:
   247                           	callstack 0
   248   000033                     	ds	1
   249   000034                     relay_initialize@F3037:
   250                           	callstack 0
   251   000034                     	ds	1
   252   000035                     led_toggle_logic@F3058:
   253                           	callstack 0
   254   000035                     	ds	1
   255   000036                     led_turn_off@F3053:
   256                           	callstack 0
   257   000036                     	ds	1
   258   000037                     led_turn_on@F3048:
   259                           	callstack 0
   260   000037                     	ds	1
   261   000038                     led_initialize@F3043:
   262                           	callstack 0
   263   000038                     	ds	1
   264   000039                     Dc_motor_stop@F3067:
   265                           	callstack 0
   266   000039                     	ds	1
   267   00003A                     Dc_motor_stop@F3065:
   268                           	callstack 0
   269   00003A                     	ds	1
   270   00003B                     Dc_motor_turn_right@F3060:
   271                           	callstack 0
   272   00003B                     	ds	1
   273   00003C                     Dc_motor_turn_right@F3058:
   274                           	callstack 0
   275   00003C                     	ds	1
   276   00003D                     Dc_motor_turn_left@F3053:
   277                           	callstack 0
   278   00003D                     	ds	1
   279   00003E                     Dc_motor_turn_left@F3051:
   280                           	callstack 0
   281   00003E                     	ds	1
   282   00003F                     Dc_motor_initialize@F3044:
   283                           	callstack 0
   284   00003F                     	ds	1
   285   000040                     Dc_motor_initialize@F3042:
   286                           	callstack 0
   287   000040                     	ds	1
   288   000041                     _adc_result1:
   289                           	callstack 0
   290   000041                     	ds	2
   291                           
   292                           	psect	dataCOMRAM
   293   000001                     __pdataCOMRAM:
   294                           	callstack 0
   295   000001                     _port_register:
   296                           	callstack 0
   297   000001                     	ds	10
   298   00000B                     _lat_register:
   299                           	callstack 0
   300   00000B                     	ds	10
   301   000015                     _tris_register:
   302                           	callstack 0
   303   000015                     	ds	10
   304   00001F                     _ret:
   305                           	callstack 0
   306   00001F                     	ds	1
   307   000020                     _adc_1:
   308                           	callstack 0
   309   000020                     	ds	6
   310   000026                     _pin_3:
   311                           	callstack 0
   312   000026                     	ds	1
   313   000027                     _pin_2:
   314                           	callstack 0
   315   000027                     	ds	1
   316   000028                     _pin_1:
   317                           	callstack 0
   318   000028                     	ds	1
   319                           
   320                           	psect	cstackCOMRAM
   321   000043                     __pcstackCOMRAM:
   322                           	callstack 0
   323   000043                     ??_adc_input_channel_pin_conf:
   324   000043                     ADC_Start_Conversion@_adc:
   325                           	callstack 0
   326   000043                     ADC_GetConversion_Status_Result@_adc:
   327                           	callstack 0
   328   000043                     adc_select_result_format@_adc:
   329                           	callstack 0
   330   000043                     adc_select_vol_ref@_adc:
   331                           	callstack 0
   332   000043                     gpio_pin_direction_init@_pin_config_t:
   333                           	callstack 0
   334   000043                     gpio_pin_write_logic@_pin_config_t:
   335                           	callstack 0
   336   000043                     gpio_pin_read_logic@_pin_config_t:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x0
   340   000043                     	ds	2
   341   000045                     ??_gpio_pin_direction_init:
   342   000045                     adc_input_channel_pin_conf@channel_adc:
   343                           	callstack 0
   344   000045                     gpio_pin_write_logic@logic:
   345                           	callstack 0
   346   000045                     ADC_GetConversion_Status_Result@converstion_result:
   347                           	callstack 0
   348   000045                     gpio_pin_read_logic@logic:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x2
   352   000045                     	ds	1
   353   000046                     ??_gpio_pin_write_logic:
   354   000046                     ADC_Init@_adc:
   355                           	callstack 0
   356   000046                     ADC_Select_Channel@_adc:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x3
   360   000046                     	ds	1
   361   000047                     ??_gpio_pin_read_logic:
   362   000047                     ??_ADC_GetConversion_Status_Result:
   363                           
   364                           ; 1 bytes @ 0x4
   365   000047                     	ds	1
   366   000048                     ??_ADC_Init:
   367   000048                     ADC_Select_Channel@adc_channel:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x5
   371   000048                     	ds	1
   372   000049                     ??_ADC_Select_Channel:
   373   000049                     ADC_Init@ret:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x6
   377   000049                     	ds	1
   378   00004A                     ADC_GetConversion_Blocking@_adc:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x7
   382   00004A                     	ds	1
   383   00004B                     gpio_pin_direction_init@ret:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x8
   387   00004B                     	ds	1
   388   00004C                     ADC_GetConversion_Blocking@adc_channel:
   389                           	callstack 0
   390   00004C                     gpio_pin_write_logic@ret:
   391                           	callstack 0
   392   00004C                     gpio_pin_read_logic@ret:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x9
   396   00004C                     	ds	1
   397   00004D                     ADC_GetConversion_Blocking@conversion_result:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0xA
   401   00004D                     	ds	2
   402   00004F                     ADC_GetConversion_Blocking@conversion_status:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0xC
   406   00004F                     	ds	1
   407   000050                     ??_main:
   408                           
   409                           ; 1 bytes @ 0xD
   410   000050                     	ds	2
   411                           
   412 ;;
   413 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   414 ;;
   415 ;; *************** function _main *****************
   416 ;; Defined at:
   417 ;;		line 182 in file "Application.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;		None
   422 ;; Return value:  Size  Location     Type
   423 ;;                  2  587[None  ] int 
   424 ;; Registers used:
   425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   435 ;;Total ram usage:        2 bytes
   436 ;; Hardware stack levels required when called: 3
   437 ;; This function calls:
   438 ;;		_ADC_GetConversion_Blocking
   439 ;;		_Application_initialize
   440 ;;		_gpio_pin_read_logic
   441 ;;		_gpio_pin_write_logic
   442 ;; This function is called by:
   443 ;;		Startup code after reset
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text0
   448   0012C2                     __ptext0:
   449                           	callstack 0
   450   0012C2                     _main:
   451                           	callstack 28
   452   0012C2                     
   453                           ;Application.c: 183:     Application_initialize();
   454   0012C2  EC86  F00B         	call	_Application_initialize	;wreg free
   455   0012C6                     l3161:
   456                           
   457                           ;Application.c: 185:         logic_input_sensor = GPIO_LOW;
   458   0012C6  0E00               	movlw	0
   459   0012C8  6E53               	movwf	_logic_input_sensor^0,c
   460   0012CA                     
   461                           ;Application.c: 186:         logic_Ouput_sensor = GPIO_LOW;
   462   0012CA  0E00               	movlw	0
   463   0012CC  6E52               	movwf	_logic_Ouput_sensor^0,c
   464   0012CE                     
   465                           ;Application.c: 187:         ADC_GetConversion_Blocking(&adc_1, ADC_CHANNEL_AN0, &adc_re
      +                          sult1);
   466   0012CE  0E20               	movlw	low _adc_1
   467   0012D0  6E4A               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   468   0012D2  0E00               	movlw	high _adc_1
   469   0012D4  6E4B               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
   470   0012D6  0E00               	movlw	0
   471   0012D8  6E4C               	movwf	ADC_GetConversion_Blocking@adc_channel^0,c
   472   0012DA  0E41               	movlw	low _adc_result1
   473   0012DC  6E4D               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
   474   0012DE  0E00               	movlw	high _adc_result1
   475   0012E0  6E4E               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
   476   0012E2  EC50  F00B         	call	_ADC_GetConversion_Blocking	;wreg free
   477   0012E6                     
   478                           ;Application.c: 188:         gpio_pin_read_logic(&pin_2, &logic_input_sensor);
   479   0012E6  0E27               	movlw	low _pin_2
   480   0012E8  6E43               	movwf	gpio_pin_read_logic@_pin_config_t^0,c
   481   0012EA  0E00               	movlw	high _pin_2
   482   0012EC  6E44               	movwf	(gpio_pin_read_logic@_pin_config_t+1)^0,c
   483   0012EE  0E53               	movlw	low _logic_input_sensor
   484   0012F0  6E45               	movwf	gpio_pin_read_logic@logic^0,c
   485   0012F2  0E00               	movlw	high _logic_input_sensor
   486   0012F4  6E46               	movwf	(gpio_pin_read_logic@logic+1)^0,c
   487   0012F6  EC41  F00A         	call	_gpio_pin_read_logic	;wreg free
   488   0012FA                     
   489                           ;Application.c: 189:         gpio_pin_read_logic(&pin_3, &logic_Ouput_sensor);
   490   0012FA  0E26               	movlw	low _pin_3
   491   0012FC  6E43               	movwf	gpio_pin_read_logic@_pin_config_t^0,c
   492   0012FE  0E00               	movlw	high _pin_3
   493   001300  6E44               	movwf	(gpio_pin_read_logic@_pin_config_t+1)^0,c
   494   001302  0E52               	movlw	low _logic_Ouput_sensor
   495   001304  6E45               	movwf	gpio_pin_read_logic@logic^0,c
   496   001306  0E00               	movlw	high _logic_Ouput_sensor
   497   001308  6E46               	movwf	(gpio_pin_read_logic@logic+1)^0,c
   498   00130A  EC41  F00A         	call	_gpio_pin_read_logic	;wreg free
   499   00130E                     
   500                           ;Application.c: 190:         _delay(500000);
   501   00130E  0E03               	movlw	3
   502   001310  6E51               	movwf	(??_main+1)^0,c
   503   001312  0E8A               	movlw	138
   504   001314  6E50               	movwf	??_main^0,c
   505   001316  0E56               	movlw	86
   506   001318                     u2217:
   507   001318  2EE8               	decfsz	wreg,f,c
   508   00131A  D7FE               	bra	u2217
   509   00131C  2E50               	decfsz	??_main^0,f,c
   510   00131E  D7FC               	bra	u2217
   511   001320  2E51               	decfsz	(??_main+1)^0,f,c
   512   001322  D7FA               	bra	u2217
   513   001324                     
   514                           ;Application.c: 191:         if(logic_input_sensor == GPIO_HIGH){
   515   001324  0453               	decf	_logic_input_sensor^0,w,c
   516   001326  A4D8               	btfss	status,2,c
   517   001328  EF98  F009         	goto	u2171
   518   00132C  EF9A  F009         	goto	u2170
   519   001330                     u2171:
   520   001330  EF9C  F009         	goto	l3177
   521   001334                     u2170:
   522   001334                     
   523                           ;Application.c: 192:             number_of_students++;
   524   001334  4A29               	infsnz	_number_of_students^0,f,c
   525   001336  2A2A               	incf	(_number_of_students+1)^0,f,c
   526   001338                     l3177:
   527                           
   528                           ;Application.c: 194:         if(logic_Ouput_sensor == GPIO_HIGH){
   529   001338  0452               	decf	_logic_Ouput_sensor^0,w,c
   530   00133A  A4D8               	btfss	status,2,c
   531   00133C  EFA2  F009         	goto	u2181
   532   001340  EFA4  F009         	goto	u2180
   533   001344                     u2181:
   534   001344  EFA7  F009         	goto	l3181
   535   001348                     u2180:
   536   001348                     
   537                           ;Application.c: 195:             number_of_students--;
   538   001348  0629               	decf	_number_of_students^0,f,c
   539   00134A  A0D8               	btfss	status,0,c
   540   00134C  062A               	decf	(_number_of_students+1)^0,f,c
   541   00134E                     l3181:
   542                           
   543                           ;Application.c: 197:         if(adc_result1 >= 500 && number_of_students >= 1){
   544   00134E  0EF4               	movlw	244
   545   001350  5C41               	subwf	_adc_result1^0,w,c
   546   001352  0E01               	movlw	1
   547   001354  5842               	subwfb	(_adc_result1+1)^0,w,c
   548   001356  A0D8               	btfss	status,0,c
   549   001358  EFB0  F009         	goto	u2191
   550   00135C  EFB2  F009         	goto	u2190
   551   001360                     u2191:
   552   001360  EFC9  F009         	goto	l3187
   553   001364                     u2190:
   554   001364  BE2A               	btfsc	(_number_of_students+1)^0,7,c
   555   001366  EFBD  F009         	goto	u2201
   556   00136A  502A               	movf	(_number_of_students+1)^0,w,c
   557   00136C  E108               	bnz	u2200
   558   00136E  0429               	decf	_number_of_students^0,w,c
   559   001370  A0D8               	btfss	status,0,c
   560   001372  EFBD  F009         	goto	u2201
   561   001376  EFBF  F009         	goto	u2200
   562   00137A                     u2201:
   563   00137A  EFC9  F009         	goto	l3187
   564   00137E                     u2200:
   565   00137E                     
   566                           ;Application.c: 198:             gpio_pin_write_logic(&pin_1, GPIO_HIGH);
   567   00137E  0E28               	movlw	low _pin_1
   568   001380  6E43               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   569   001382  0E00               	movlw	high _pin_1
   570   001384  6E44               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   571   001386  0E01               	movlw	1
   572   001388  6E45               	movwf	gpio_pin_write_logic@logic^0,c
   573   00138A  ECBC  F008         	call	_gpio_pin_write_logic	;wreg free
   574                           
   575                           ;Application.c: 199:         }
   576   00138E  EF63  F009         	goto	l3161
   577   001392                     l3187:
   578                           
   579                           ;Application.c: 201:             gpio_pin_write_logic(&pin_1, GPIO_LOW);
   580   001392  0E28               	movlw	low _pin_1
   581   001394  6E43               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
   582   001396  0E00               	movlw	high _pin_1
   583   001398  6E44               	movwf	(gpio_pin_write_logic@_pin_config_t+1)^0,c
   584   00139A  0E00               	movlw	0
   585   00139C  6E45               	movwf	gpio_pin_write_logic@logic^0,c
   586   00139E  ECBC  F008         	call	_gpio_pin_write_logic	;wreg free
   587   0013A2  EF63  F009         	goto	l3161
   588   0013A6  EF00  F000         	goto	start
   589   0013AA                     __end_of_main:
   590                           	callstack 0
   591                           
   592 ;; *************** function _gpio_pin_write_logic *****************
   593 ;; Defined at:
   594 ;;		line 70 in file "MCAL_Layer/hal_gpio.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
   597 ;;		 -> pin_1(1), relay_turn_off@relayy(1), relay_turn_on@relayy(1), relay_initialize@relayy(1), 
   598 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), Dc_motor_stop@dc_motor_pin_2(1), 
   599 ;;		 -> Dc_motor_stop@dc_motor_pin_1(1), Dc_motor_turn_right@dc_motor_pin_2(1), Dc_motor_turn_right@dc_motor_pin_1(1), D
      +c_motor_turn_left@dc_motor_pin_2(1), 
   600 ;;		 -> Dc_motor_turn_left@dc_motor_pin_1(1), Dc_motor_initialize@dc_motor_pin_2(1), Dc_motor_initialize@dc_motor_pin_1(
      +1), 
   601 ;;  logic           1    2[COMRAM] enum E2965
   602 ;; Auto vars:     Size  Location     Type
   603 ;;  ret             1    9[COMRAM] unsigned char 
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      unsigned char 
   606 ;; Registers used:
   607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   613 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;Total ram usage:       10 bytes
   618 ;; Hardware stack levels used: 1
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_main
   623 ;;		_keypad_initialize
   624 ;;		_keypad_get_value
   625 ;;		_segment_initialize
   626 ;;		_segment_write_num
   627 ;;		_Dc_motor_initialize
   628 ;;		_Dc_motor_turn_left
   629 ;;		_Dc_motor_turn_right
   630 ;;		_Dc_motor_stop
   631 ;;		_lcd_4_bit_initialize
   632 ;;		_lcd_4_bit_send_command
   633 ;;		_lcd_4_bit_send_char_data
   634 ;;		_lcd_8_bit_initialize
   635 ;;		_lcd_8_bit_send_command
   636 ;;		_lcd_8_bit_send_char_data
   637 ;;		_lcd_4bit_send_t
   638 ;;		_lcd_8bit_send_t
   639 ;;		_led_initialize
   640 ;;		_led_turn_on
   641 ;;		_led_turn_off
   642 ;;		_relay_initialize
   643 ;;		_relay_turn_on
   644 ;;		_relay_turn_off
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text1
   649   001178                     __ptext1:
   650                           	callstack 0
   651   001178                     _gpio_pin_write_logic:
   652                           	callstack 30
   653   001178                     
   654                           ;MCAL_Layer/hal_gpio.c: 71:     STD_ReturnType ret = (STD_ReturnType)0x01;
   655   001178  0E01               	movlw	1
   656   00117A  6E4C               	movwf	gpio_pin_write_logic@ret^0,c
   657   00117C                     
   658                           ;MCAL_Layer/hal_gpio.c: 72:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           5 - 1) || (_pin_config_t->pin > 8 - 1)) ret = (STD_ReturnType)0x00;
   659   00117C  5043               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
   660   00117E  1044               	iorwf	(gpio_pin_write_logic@_pin_config_t+1)^0,w,c
   661   001180  B4D8               	btfsc	status,2,c
   662   001182  EFC5  F008         	goto	u1441
   663   001186  EFC7  F008         	goto	u1440
   664   00118A                     u1441:
   665   00118A  EFE7  F008         	goto	l2487
   666   00118E                     u1440:
   667   00118E  C043  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
   668   001192  C044  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
   669   001196  50DF               	movf	223,w,c
   670   001198  0B07               	andlw	7
   671   00119A  6E46               	movwf	??_gpio_pin_write_logic^0,c
   672   00119C  0E05               	movlw	5
   673   00119E  6046               	cpfslt	??_gpio_pin_write_logic^0,c
   674   0011A0  EFD4  F008         	goto	u1451
   675   0011A4  EFD6  F008         	goto	u1450
   676   0011A8                     u1451:
   677   0011A8  EFE7  F008         	goto	l2487
   678   0011AC                     u1450:
   679   0011AC  C043  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
   680   0011B0  C044  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
   681   0011B4  30DF               	rrcf	223,w,c
   682   0011B6  32E8               	rrcf	wreg,f,c
   683   0011B8  32E8               	rrcf	wreg,f,c
   684   0011BA  0B07               	andlw	7
   685   0011BC  6E46               	movwf	??_gpio_pin_write_logic^0,c
   686   0011BE  0E07               	movlw	7
   687   0011C0  6446               	cpfsgt	??_gpio_pin_write_logic^0,c
   688   0011C2  EFE5  F008         	goto	u1461
   689   0011C6  EFE7  F008         	goto	u1460
   690   0011CA                     u1461:
   691   0011CA  EF4A  F009         	goto	l2495
   692   0011CE                     u1460:
   693   0011CE                     l2487:
   694   0011CE  0E00               	movlw	0
   695   0011D0  6E4C               	movwf	gpio_pin_write_logic@ret^0,c
   696   0011D2  EF5F  F009         	goto	l2497
   697   0011D6                     l2489:
   698                           
   699                           ;MCAL_Layer/hal_gpio.c: 76:                 (*lat_register[_pin_config_t->port] &= ~(1 <
      +                          < _pin_config_t->pin));
   700   0011D6  C043  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
   701   0011DA  C044  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
   702   0011DE  30DF               	rrcf	223,w,c
   703   0011E0  32E8               	rrcf	wreg,f,c
   704   0011E2  32E8               	rrcf	wreg,f,c
   705   0011E4  0B07               	andlw	7
   706   0011E6  6E46               	movwf	??_gpio_pin_write_logic^0,c
   707   0011E8  0E01               	movlw	1
   708   0011EA  6E47               	movwf	(??_gpio_pin_write_logic+1)^0,c
   709   0011EC  2A46               	incf	??_gpio_pin_write_logic^0,f,c
   710   0011EE  EFFB  F008         	goto	u1474
   711   0011F2                     u1475:
   712   0011F2  90D8               	bcf	status,0,c
   713   0011F4  3647               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   714   0011F6                     u1474:
   715   0011F6  2E46               	decfsz	??_gpio_pin_write_logic^0,f,c
   716   0011F8  EFF9  F008         	goto	u1475
   717   0011FC  5047               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   718   0011FE  0AFF               	xorlw	255
   719   001200  6E48               	movwf	(??_gpio_pin_write_logic+2)^0,c
   720   001202  C043  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
   721   001206  C044  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
   722   00120A  50DF               	movf	223,w,c
   723   00120C  0B07               	andlw	7
   724   00120E  6E49               	movwf	(??_gpio_pin_write_logic+3)^0,c
   725   001210  5049               	movf	(??_gpio_pin_write_logic+3)^0,w,c
   726   001212  0D02               	mullw	2
   727   001214  0E0B               	movlw	low _lat_register
   728   001216  24F3               	addwf	243,w,c
   729   001218  6ED9               	movwf	fsr2l,c
   730   00121A  0E00               	movlw	high _lat_register
   731   00121C  20F4               	addwfc	prodh,w,c
   732   00121E  6EDA               	movwf	fsr2h,c
   733   001220  CFDE F04A          	movff	postinc2,??_gpio_pin_write_logic+4
   734   001224  CFDD F04B          	movff	postdec2,??_gpio_pin_write_logic+5
   735   001228  C04A  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
   736   00122C  C04B  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
   737   001230  5048               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   738   001232  16DF               	andwf	indf2,f,c
   739                           
   740                           ;MCAL_Layer/hal_gpio.c: 77:                 break;
   741   001234  EF5F  F009         	goto	l2497
   742   001238                     l2491:
   743                           
   744                           ;MCAL_Layer/hal_gpio.c: 79:                 (*lat_register[_pin_config_t->port] |= (1 <<
      +                           _pin_config_t->pin));
   745   001238  C043  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
   746   00123C  C044  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
   747   001240  30DF               	rrcf	223,w,c
   748   001242  32E8               	rrcf	wreg,f,c
   749   001244  32E8               	rrcf	wreg,f,c
   750   001246  0B07               	andlw	7
   751   001248  6E46               	movwf	??_gpio_pin_write_logic^0,c
   752   00124A  0E01               	movlw	1
   753   00124C  6E47               	movwf	(??_gpio_pin_write_logic+1)^0,c
   754   00124E  2A46               	incf	??_gpio_pin_write_logic^0,f,c
   755   001250  EF2C  F009         	goto	u1484
   756   001254                     u1485:
   757   001254  90D8               	bcf	status,0,c
   758   001256  3647               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   759   001258                     u1484:
   760   001258  2E46               	decfsz	??_gpio_pin_write_logic^0,f,c
   761   00125A  EF2A  F009         	goto	u1485
   762   00125E  C043  FFD9         	movff	gpio_pin_write_logic@_pin_config_t,fsr2l
   763   001262  C044  FFDA         	movff	gpio_pin_write_logic@_pin_config_t+1,fsr2h
   764   001266  50DF               	movf	223,w,c
   765   001268  0B07               	andlw	7
   766   00126A  6E48               	movwf	(??_gpio_pin_write_logic+2)^0,c
   767   00126C  5048               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   768   00126E  0D02               	mullw	2
   769   001270  0E0B               	movlw	low _lat_register
   770   001272  24F3               	addwf	243,w,c
   771   001274  6ED9               	movwf	fsr2l,c
   772   001276  0E00               	movlw	high _lat_register
   773   001278  20F4               	addwfc	prodh,w,c
   774   00127A  6EDA               	movwf	fsr2h,c
   775   00127C  CFDE F049          	movff	postinc2,??_gpio_pin_write_logic+3
   776   001280  CFDD F04A          	movff	postdec2,??_gpio_pin_write_logic+4
   777   001284  C049  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   778   001288  C04A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   779   00128C  5047               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   780   00128E  12DF               	iorwf	indf2,f,c
   781                           
   782                           ;MCAL_Layer/hal_gpio.c: 80:                 break;
   783   001290  EF5F  F009         	goto	l2497
   784   001294                     l2495:
   785   001294  5045               	movf	gpio_pin_write_logic@logic^0,w,c
   786   001296  6E46               	movwf	??_gpio_pin_write_logic^0,c
   787   001298  6A47               	clrf	(??_gpio_pin_write_logic+1)^0,c
   788                           
   789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   790                           ; Switch size 1, requested type "simple"
   791                           ; Number of cases is 1, Range of values is 0 to 0
   792                           ; switch strategies available:
   793                           ; Name         Instructions Cycles
   794                           ; simple_byte            4     3 (average)
   795                           ;	Chosen strategy is simple_byte
   796   00129A  5047               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   797   00129C  0A00               	xorlw	0	; case 0
   798   00129E  B4D8               	btfsc	status,2,c
   799   0012A0  EF54  F009         	goto	l3201
   800   0012A4  EFE7  F008         	goto	l2487
   801   0012A8                     l3201:
   802                           
   803                           ; Switch size 1, requested type "simple"
   804                           ; Number of cases is 2, Range of values is 0 to 1
   805                           ; switch strategies available:
   806                           ; Name         Instructions Cycles
   807                           ; simple_byte            7     4 (average)
   808                           ;	Chosen strategy is simple_byte
   809   0012A8  5046               	movf	??_gpio_pin_write_logic^0,w,c
   810   0012AA  0A00               	xorlw	0	; case 0
   811   0012AC  B4D8               	btfsc	status,2,c
   812   0012AE  EFEB  F008         	goto	l2489
   813   0012B2  0A01               	xorlw	1	; case 1
   814   0012B4  B4D8               	btfsc	status,2,c
   815   0012B6  EF1C  F009         	goto	l2491
   816   0012BA  EFE7  F008         	goto	l2487
   817   0012BE                     l2497:
   818                           
   819                           ;MCAL_Layer/hal_gpio.c: 84:     return ret;
   820   0012BE  504C               	movf	gpio_pin_write_logic@ret^0,w,c
   821   0012C0  0012               	return		;funcret
   822   0012C2                     __end_of_gpio_pin_write_logic:
   823                           	callstack 0
   824                           
   825 ;; *************** function _gpio_pin_read_logic *****************
   826 ;; Defined at:
   827 ;;		line 96 in file "MCAL_Layer/hal_gpio.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
   830 ;;		 -> pin_3(1), pin_2(1), 
   831 ;;  logic           2    2[COMRAM] PTR enum E2965
   832 ;;		 -> logic_Ouput_sensor(1), logic_input_sensor(1), button_read_state@Pin_Logic_Status(1), keypad_get_value@logic_btn(
      +1), 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  ret             1    9[COMRAM] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      unsigned char 
   837 ;; Registers used:
   838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   844 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;Total ram usage:       10 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_main
   854 ;;		_keypad_get_value
   855 ;;		_button_read_state
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text2
   860   001482                     __ptext2:
   861                           	callstack 0
   862   001482                     _gpio_pin_read_logic:
   863                           	callstack 30
   864   001482                     
   865                           ;MCAL_Layer/hal_gpio.c: 97:     STD_ReturnType ret = (STD_ReturnType)0x01;
   866   001482  0E01               	movlw	1
   867   001484  6E4C               	movwf	gpio_pin_read_logic@ret^0,c
   868   001486                     
   869                           ;MCAL_Layer/hal_gpio.c: 98:     if(_pin_config_t == ((void*)0) || logic == ((void*)0) ||
      +                           (_pin_config_t->port > 5 - 1) || (_pin_config_t->pin > 8 - 1)) ret = (STD_ReturnType)0x
      +                          00;
   870   001486  5043               	movf	gpio_pin_read_logic@_pin_config_t^0,w,c
   871   001488  1044               	iorwf	(gpio_pin_read_logic@_pin_config_t+1)^0,w,c
   872   00148A  B4D8               	btfsc	status,2,c
   873   00148C  EF4A  F00A         	goto	u1491
   874   001490  EF4C  F00A         	goto	u1490
   875   001494                     u1491:
   876   001494  EF75  F00A         	goto	l2515
   877   001498                     u1490:
   878   001498  5045               	movf	gpio_pin_read_logic@logic^0,w,c
   879   00149A  1046               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
   880   00149C  B4D8               	btfsc	status,2,c
   881   00149E  EF53  F00A         	goto	u1501
   882   0014A2  EF55  F00A         	goto	u1500
   883   0014A6                     u1501:
   884   0014A6  EF75  F00A         	goto	l2515
   885   0014AA                     u1500:
   886   0014AA  C043  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
   887   0014AE  C044  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
   888   0014B2  50DF               	movf	223,w,c
   889   0014B4  0B07               	andlw	7
   890   0014B6  6E47               	movwf	??_gpio_pin_read_logic^0,c
   891   0014B8  0E05               	movlw	5
   892   0014BA  6047               	cpfslt	??_gpio_pin_read_logic^0,c
   893   0014BC  EF62  F00A         	goto	u1511
   894   0014C0  EF64  F00A         	goto	u1510
   895   0014C4                     u1511:
   896   0014C4  EF75  F00A         	goto	l2515
   897   0014C8                     u1510:
   898   0014C8  C043  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
   899   0014CC  C044  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
   900   0014D0  30DF               	rrcf	223,w,c
   901   0014D2  32E8               	rrcf	wreg,f,c
   902   0014D4  32E8               	rrcf	wreg,f,c
   903   0014D6  0B07               	andlw	7
   904   0014D8  6E47               	movwf	??_gpio_pin_read_logic^0,c
   905   0014DA  0E07               	movlw	7
   906   0014DC  6447               	cpfsgt	??_gpio_pin_read_logic^0,c
   907   0014DE  EF73  F00A         	goto	u1521
   908   0014E2  EF75  F00A         	goto	u1520
   909   0014E6                     u1521:
   910   0014E6  EF79  F00A         	goto	l2517
   911   0014EA                     u1520:
   912   0014EA                     l2515:
   913   0014EA  0E00               	movlw	0
   914   0014EC  6E4C               	movwf	gpio_pin_read_logic@ret^0,c
   915   0014EE  EFAA  F00A         	goto	l2519
   916   0014F2                     l2517:
   917                           
   918                           ;MCAL_Layer/hal_gpio.c: 100:         *logic = ((*port_register[_pin_config_t->port] >> _
      +                          pin_config_t->pin) & 1);
   919   0014F2  C043  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
   920   0014F6  C044  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
   921   0014FA  30DF               	rrcf	223,w,c
   922   0014FC  32E8               	rrcf	wreg,f,c
   923   0014FE  32E8               	rrcf	wreg,f,c
   924   001500  0B07               	andlw	7
   925   001502  6E47               	movwf	??_gpio_pin_read_logic^0,c
   926   001504  C043  FFD9         	movff	gpio_pin_read_logic@_pin_config_t,fsr2l
   927   001508  C044  FFDA         	movff	gpio_pin_read_logic@_pin_config_t+1,fsr2h
   928   00150C  50DF               	movf	223,w,c
   929   00150E  0B07               	andlw	7
   930   001510  6E48               	movwf	(??_gpio_pin_read_logic+1)^0,c
   931   001512  5048               	movf	(??_gpio_pin_read_logic+1)^0,w,c
   932   001514  0D02               	mullw	2
   933   001516  0E01               	movlw	low _port_register
   934   001518  24F3               	addwf	243,w,c
   935   00151A  6ED9               	movwf	fsr2l,c
   936   00151C  0E00               	movlw	high _port_register
   937   00151E  20F4               	addwfc	prodh,w,c
   938   001520  6EDA               	movwf	fsr2h,c
   939   001522  CFDE F049          	movff	postinc2,??_gpio_pin_read_logic+2
   940   001526  CFDD F04A          	movff	postdec2,??_gpio_pin_read_logic+3
   941   00152A  C049  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
   942   00152E  C04A  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
   943   001532  50DF               	movf	indf2,w,c
   944   001534  6E4B               	movwf	(??_gpio_pin_read_logic+4)^0,c
   945   001536  2A47               	incf	??_gpio_pin_read_logic^0,f,c
   946   001538  EFA0  F00A         	goto	u1534
   947   00153C                     u1535:
   948   00153C  90D8               	bcf	status,0,c
   949   00153E  324B               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
   950   001540                     u1534:
   951   001540  2E47               	decfsz	??_gpio_pin_read_logic^0,f,c
   952   001542  EF9E  F00A         	goto	u1535
   953   001546  504B               	movf	(??_gpio_pin_read_logic+4)^0,w,c
   954   001548  0B01               	andlw	1
   955   00154A  C045  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
   956   00154E  C046  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
   957   001552  6EDF               	movwf	indf2,c
   958   001554                     l2519:
   959                           
   960                           ;MCAL_Layer/hal_gpio.c: 102:     return ret;
   961   001554  504C               	movf	gpio_pin_read_logic@ret^0,w,c
   962   001556  0012               	return		;funcret
   963   001558                     __end_of_gpio_pin_read_logic:
   964                           	callstack 0
   965                           
   966 ;; *************** function _Application_initialize *****************
   967 ;; Defined at:
   968 ;;		line 208 in file "Application.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 2
   989 ;; This function calls:
   990 ;;		_ADC_Init
   991 ;;		_gpio_pin_direction_init
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text3
   998   00170C                     __ptext3:
   999                           	callstack 0
  1000   00170C                     _Application_initialize:
  1001                           	callstack 28
  1002   00170C                     
  1003                           ;Application.c: 209:     ret = ADC_Init(&adc_1);
  1004   00170C  0E20               	movlw	low _adc_1
  1005   00170E  6E46               	movwf	ADC_Init@_adc^0,c
  1006   001710  0E00               	movlw	high _adc_1
  1007   001712  6E47               	movwf	(ADC_Init@_adc+1)^0,c
  1008   001714  ECAC  F00A         	call	_ADC_Init	;wreg free
  1009   001718  6E1F               	movwf	_ret^0,c
  1010   00171A                     
  1011                           ;Application.c: 210:     ret = gpio_pin_direction_init(&pin_1);
  1012   00171A  0E28               	movlw	low _pin_1
  1013   00171C  6E43               	movwf	gpio_pin_direction_init@_pin_config_t^0,c
  1014   00171E  0E00               	movlw	high _pin_1
  1015   001720  6E44               	movwf	(gpio_pin_direction_init@_pin_config_t+1)^0,c
  1016   001722  EC0B  F008         	call	_gpio_pin_direction_init	;wreg free
  1017   001726  6E1F               	movwf	_ret^0,c
  1018   001728                     
  1019                           ;Application.c: 211:     ret = gpio_pin_direction_init(&pin_2);
  1020   001728  0E27               	movlw	low _pin_2
  1021   00172A  6E43               	movwf	gpio_pin_direction_init@_pin_config_t^0,c
  1022   00172C  0E00               	movlw	high _pin_2
  1023   00172E  6E44               	movwf	(gpio_pin_direction_init@_pin_config_t+1)^0,c
  1024   001730  EC0B  F008         	call	_gpio_pin_direction_init	;wreg free
  1025   001734  6E1F               	movwf	_ret^0,c
  1026   001736                     
  1027                           ;Application.c: 212:     ret = gpio_pin_direction_init(&pin_3);
  1028   001736  0E26               	movlw	low _pin_3
  1029   001738  6E43               	movwf	gpio_pin_direction_init@_pin_config_t^0,c
  1030   00173A  0E00               	movlw	high _pin_3
  1031   00173C  6E44               	movwf	(gpio_pin_direction_init@_pin_config_t+1)^0,c
  1032   00173E  EC0B  F008         	call	_gpio_pin_direction_init	;wreg free
  1033   001742  6E1F               	movwf	_ret^0,c
  1034   001744  0012               	return		;funcret
  1035   001746                     __end_of_Application_initialize:
  1036                           	callstack 0
  1037                           
  1038 ;; *************** function _gpio_pin_direction_init *****************
  1039 ;; Defined at:
  1040 ;;		line 24 in file "MCAL_Layer/hal_gpio.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  _pin_config_    2    0[COMRAM] PTR const struct .
  1043 ;;		 -> pin_1(1), pin_3(1), pin_2(1), relay_initialize@relayy(1), 
  1044 ;;		 -> led_initialize@pin_obj(1), Dc_motor_initialize@dc_motor_pin_2(1), Dc_motor_initialize@dc_motor_pin_1(1), 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  ret             1    8[COMRAM] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      unsigned char 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;Total ram usage:        9 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_Application_initialize
  1066 ;;		_keypad_initialize
  1067 ;;		_button_initialize
  1068 ;;		_segment_initialize
  1069 ;;		_Dc_motor_initialize
  1070 ;;		_lcd_4_bit_initialize
  1071 ;;		_lcd_8_bit_initialize
  1072 ;;		_led_initialize
  1073 ;;		_relay_initialize
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text4
  1078   001016                     __ptext4:
  1079                           	callstack 0
  1080   001016                     _gpio_pin_direction_init:
  1081                           	callstack 29
  1082   001016                     
  1083                           ;MCAL_Layer/hal_gpio.c: 25:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1084   001016  0E01               	movlw	1
  1085   001018  6E4B               	movwf	gpio_pin_direction_init@ret^0,c
  1086   00101A                     
  1087                           ;MCAL_Layer/hal_gpio.c: 26:     if(_pin_config_t == ((void*)0) || (_pin_config_t->port >
      +                           (5 - 1)) || (_pin_config_t->pin > (8 - 1))) ret = (STD_ReturnType)0x00;
  1088   00101A  5043               	movf	gpio_pin_direction_init@_pin_config_t^0,w,c
  1089   00101C  1044               	iorwf	(gpio_pin_direction_init@_pin_config_t+1)^0,w,c
  1090   00101E  B4D8               	btfsc	status,2,c
  1091   001020  EF14  F008         	goto	u1261
  1092   001024  EF16  F008         	goto	u1260
  1093   001028                     u1261:
  1094   001028  EF36  F008         	goto	l2355
  1095   00102C                     u1260:
  1096   00102C  C043  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1097   001030  C044  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1098   001034  50DF               	movf	223,w,c
  1099   001036  0B07               	andlw	7
  1100   001038  6E45               	movwf	??_gpio_pin_direction_init^0,c
  1101   00103A  0E05               	movlw	5
  1102   00103C  6045               	cpfslt	??_gpio_pin_direction_init^0,c
  1103   00103E  EF23  F008         	goto	u1271
  1104   001042  EF25  F008         	goto	u1270
  1105   001046                     u1271:
  1106   001046  EF36  F008         	goto	l2355
  1107   00104A                     u1270:
  1108   00104A  C043  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1109   00104E  C044  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1110   001052  30DF               	rrcf	223,w,c
  1111   001054  32E8               	rrcf	wreg,f,c
  1112   001056  32E8               	rrcf	wreg,f,c
  1113   001058  0B07               	andlw	7
  1114   00105A  6E45               	movwf	??_gpio_pin_direction_init^0,c
  1115   00105C  0E07               	movlw	7
  1116   00105E  6445               	cpfsgt	??_gpio_pin_direction_init^0,c
  1117   001060  EF34  F008         	goto	u1281
  1118   001064  EF36  F008         	goto	u1280
  1119   001068                     u1281:
  1120   001068  EF99  F008         	goto	l2363
  1121   00106C                     u1280:
  1122   00106C                     l2355:
  1123   00106C  0E00               	movlw	0
  1124   00106E  6E4B               	movwf	gpio_pin_direction_init@ret^0,c
  1125   001070  EFBA  F008         	goto	l2365
  1126   001074                     l2357:
  1127                           
  1128                           ;MCAL_Layer/hal_gpio.c: 30:                 (*tris_register[_pin_config_t->port] &= ~(1 
      +                          << _pin_config_t->pin));
  1129   001074  C043  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1130   001078  C044  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1131   00107C  30DF               	rrcf	223,w,c
  1132   00107E  32E8               	rrcf	wreg,f,c
  1133   001080  32E8               	rrcf	wreg,f,c
  1134   001082  0B07               	andlw	7
  1135   001084  6E45               	movwf	??_gpio_pin_direction_init^0,c
  1136   001086  0E01               	movlw	1
  1137   001088  6E46               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1138   00108A  2A45               	incf	??_gpio_pin_direction_init^0,f,c
  1139   00108C  EF4A  F008         	goto	u1294
  1140   001090                     u1295:
  1141   001090  90D8               	bcf	status,0,c
  1142   001092  3646               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1143   001094                     u1294:
  1144   001094  2E45               	decfsz	??_gpio_pin_direction_init^0,f,c
  1145   001096  EF48  F008         	goto	u1295
  1146   00109A  5046               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1147   00109C  0AFF               	xorlw	255
  1148   00109E  6E47               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1149   0010A0  C043  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1150   0010A4  C044  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1151   0010A8  50DF               	movf	223,w,c
  1152   0010AA  0B07               	andlw	7
  1153   0010AC  6E48               	movwf	(??_gpio_pin_direction_init+3)^0,c
  1154   0010AE  5048               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  1155   0010B0  0D02               	mullw	2
  1156   0010B2  0E15               	movlw	low _tris_register
  1157   0010B4  24F3               	addwf	243,w,c
  1158   0010B6  6ED9               	movwf	fsr2l,c
  1159   0010B8  0E00               	movlw	high _tris_register
  1160   0010BA  20F4               	addwfc	prodh,w,c
  1161   0010BC  6EDA               	movwf	fsr2h,c
  1162   0010BE  CFDE F049          	movff	postinc2,??_gpio_pin_direction_init+4
  1163   0010C2  CFDD F04A          	movff	postdec2,??_gpio_pin_direction_init+5
  1164   0010C6  C049  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  1165   0010CA  C04A  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  1166   0010CE  5047               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1167   0010D0  16DF               	andwf	indf2,f,c
  1168                           
  1169                           ;MCAL_Layer/hal_gpio.c: 31:                 break;
  1170   0010D2  EFBA  F008         	goto	l2365
  1171   0010D6                     l2359:
  1172                           
  1173                           ;MCAL_Layer/hal_gpio.c: 33:                 (*tris_register[_pin_config_t->port] |= (1 <
      +                          < _pin_config_t->pin));
  1174   0010D6  C043  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1175   0010DA  C044  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1176   0010DE  30DF               	rrcf	223,w,c
  1177   0010E0  32E8               	rrcf	wreg,f,c
  1178   0010E2  32E8               	rrcf	wreg,f,c
  1179   0010E4  0B07               	andlw	7
  1180   0010E6  6E45               	movwf	??_gpio_pin_direction_init^0,c
  1181   0010E8  0E01               	movlw	1
  1182   0010EA  6E46               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1183   0010EC  2A45               	incf	??_gpio_pin_direction_init^0,f,c
  1184   0010EE  EF7B  F008         	goto	u1304
  1185   0010F2                     u1305:
  1186   0010F2  90D8               	bcf	status,0,c
  1187   0010F4  3646               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1188   0010F6                     u1304:
  1189   0010F6  2E45               	decfsz	??_gpio_pin_direction_init^0,f,c
  1190   0010F8  EF79  F008         	goto	u1305
  1191   0010FC  C043  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1192   001100  C044  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1193   001104  50DF               	movf	223,w,c
  1194   001106  0B07               	andlw	7
  1195   001108  6E47               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1196   00110A  5047               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1197   00110C  0D02               	mullw	2
  1198   00110E  0E15               	movlw	low _tris_register
  1199   001110  24F3               	addwf	243,w,c
  1200   001112  6ED9               	movwf	fsr2l,c
  1201   001114  0E00               	movlw	high _tris_register
  1202   001116  20F4               	addwfc	prodh,w,c
  1203   001118  6EDA               	movwf	fsr2h,c
  1204   00111A  CFDE F048          	movff	postinc2,??_gpio_pin_direction_init+3
  1205   00111E  CFDD F049          	movff	postdec2,??_gpio_pin_direction_init+4
  1206   001122  C048  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1207   001126  C049  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1208   00112A  5046               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1209   00112C  12DF               	iorwf	indf2,f,c
  1210                           
  1211                           ;MCAL_Layer/hal_gpio.c: 34:                 break;
  1212   00112E  EFBA  F008         	goto	l2365
  1213   001132                     l2363:
  1214   001132  C043  FFD9         	movff	gpio_pin_direction_init@_pin_config_t,fsr2l
  1215   001136  C044  FFDA         	movff	gpio_pin_direction_init@_pin_config_t+1,fsr2h
  1216   00113A  BCDF               	btfsc	indf2,6,c
  1217   00113C  EFA2  F008         	goto	u1311
  1218   001140  EFA5  F008         	goto	u1310
  1219   001144                     u1311:
  1220   001144  0E01               	movlw	1
  1221   001146  EFA6  F008         	goto	u1320
  1222   00114A                     u1310:
  1223   00114A  0E00               	movlw	0
  1224   00114C                     u1320:
  1225   00114C  6E45               	movwf	??_gpio_pin_direction_init^0,c
  1226   00114E  6A46               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1227                           
  1228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1229                           ; Switch size 1, requested type "simple"
  1230                           ; Number of cases is 1, Range of values is 0 to 0
  1231                           ; switch strategies available:
  1232                           ; Name         Instructions Cycles
  1233                           ; simple_byte            4     3 (average)
  1234                           ;	Chosen strategy is simple_byte
  1235   001150  5046               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1236   001152  0A00               	xorlw	0	; case 0
  1237   001154  B4D8               	btfsc	status,2,c
  1238   001156  EFAF  F008         	goto	l3203
  1239   00115A  EF36  F008         	goto	l2355
  1240   00115E                     l3203:
  1241                           
  1242                           ; Switch size 1, requested type "simple"
  1243                           ; Number of cases is 2, Range of values is 0 to 1
  1244                           ; switch strategies available:
  1245                           ; Name         Instructions Cycles
  1246                           ; simple_byte            7     4 (average)
  1247                           ;	Chosen strategy is simple_byte
  1248   00115E  5045               	movf	??_gpio_pin_direction_init^0,w,c
  1249   001160  0A00               	xorlw	0	; case 0
  1250   001162  B4D8               	btfsc	status,2,c
  1251   001164  EF3A  F008         	goto	l2357
  1252   001168  0A01               	xorlw	1	; case 1
  1253   00116A  B4D8               	btfsc	status,2,c
  1254   00116C  EF6B  F008         	goto	l2359
  1255   001170  EF36  F008         	goto	l2355
  1256   001174                     l2365:
  1257                           
  1258                           ;MCAL_Layer/hal_gpio.c: 38:     return ret;
  1259   001174  504B               	movf	gpio_pin_direction_init@ret^0,w,c
  1260   001176  0012               	return		;funcret
  1261   001178                     __end_of_gpio_pin_direction_init:
  1262                           	callstack 0
  1263                           
  1264 ;; *************** function _ADC_Init *****************
  1265 ;; Defined at:
  1266 ;;		line 28 in file "MCAL_Layer/ADC/hal_adc.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  _adc            2    3[COMRAM] PTR const struct .
  1269 ;;		 -> adc_1(6), 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  ret             1    6[COMRAM] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      unsigned char 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;Total ram usage:        4 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 1
  1288 ;; This function calls:
  1289 ;;		_adc_input_channel_pin_conf
  1290 ;;		_adc_select_result_format
  1291 ;;		_adc_select_vol_ref
  1292 ;; This function is called by:
  1293 ;;		_Application_initialize
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text5
  1298   001558                     __ptext5:
  1299                           	callstack 0
  1300   001558                     _ADC_Init:
  1301                           	callstack 28
  1302   001558                     
  1303                           ;MCAL_Layer/ADC/hal_adc.c: 29:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1304   001558  0E01               	movlw	1
  1305   00155A  6E49               	movwf	ADC_Init@ret^0,c
  1306   00155C                     
  1307                           ;MCAL_Layer/ADC/hal_adc.c: 30:     if(_adc == ((void*)0)) ret = (STD_ReturnType)0x00;
  1308   00155C  5046               	movf	ADC_Init@_adc^0,w,c
  1309   00155E  1047               	iorwf	(ADC_Init@_adc+1)^0,w,c
  1310   001560  A4D8               	btfss	status,2,c
  1311   001562  EFB5  F00A         	goto	u1371
  1312   001566  EFB7  F00A         	goto	u1370
  1313   00156A                     u1371:
  1314   00156A  EFBB  F00A         	goto	l358
  1315   00156E                     u1370:
  1316   00156E  0E00               	movlw	0
  1317   001570  6E49               	movwf	ADC_Init@ret^0,c
  1318   001572  EFFE  F00A         	goto	l2441
  1319   001576                     l358:
  1320                           
  1321                           ;MCAL_Layer/ADC/hal_adc.c: 32:         (ADCON0bits.ADON = 0);
  1322   001576  90C2               	bcf	194,0,c	;volatile
  1323   001578                     
  1324                           ;MCAL_Layer/ADC/hal_adc.c: 33:         ADCON2bits.ACQT = _adc->acquicition_time;
  1325   001578  EE20 F002          	lfsr	2,2
  1326   00157C  5046               	movf	ADC_Init@_adc^0,w,c
  1327   00157E  26D9               	addwf	fsr2l,f,c
  1328   001580  5047               	movf	(ADC_Init@_adc+1)^0,w,c
  1329   001582  22DA               	addwfc	fsr2h,f,c
  1330   001584  50DF               	movf	indf2,w,c
  1331   001586  6E48               	movwf	??_ADC_Init^0,c
  1332   001588  4648               	rlncf	??_ADC_Init^0,f,c
  1333   00158A  4648               	rlncf	??_ADC_Init^0,f,c
  1334   00158C  4648               	rlncf	??_ADC_Init^0,f,c
  1335   00158E  50C0               	movf	192,w,c	;volatile
  1336   001590  1848               	xorwf	??_ADC_Init^0,w,c
  1337   001592  0BC7               	andlw	-57
  1338   001594  1848               	xorwf	??_ADC_Init^0,w,c
  1339   001596  6EC0               	movwf	192,c	;volatile
  1340                           
  1341                           ;MCAL_Layer/ADC/hal_adc.c: 34:         ADCON2bits.ADCS = _adc->onversion_clock;
  1342   001598  EE20 F003          	lfsr	2,3
  1343   00159C  5046               	movf	ADC_Init@_adc^0,w,c
  1344   00159E  26D9               	addwf	fsr2l,f,c
  1345   0015A0  5047               	movf	(ADC_Init@_adc+1)^0,w,c
  1346   0015A2  22DA               	addwfc	fsr2h,f,c
  1347   0015A4  50DF               	movf	indf2,w,c
  1348   0015A6  6E48               	movwf	??_ADC_Init^0,c
  1349   0015A8  50C0               	movf	192,w,c	;volatile
  1350   0015AA  1848               	xorwf	??_ADC_Init^0,w,c
  1351   0015AC  0BF8               	andlw	-8
  1352   0015AE  1848               	xorwf	??_ADC_Init^0,w,c
  1353   0015B0  6EC0               	movwf	192,c	;volatile
  1354                           
  1355                           ;MCAL_Layer/ADC/hal_adc.c: 35:         ADCON0bits.CHS = _adc->select_channel;
  1356   0015B2  EE20 F004          	lfsr	2,4
  1357   0015B6  5046               	movf	ADC_Init@_adc^0,w,c
  1358   0015B8  26D9               	addwf	fsr2l,f,c
  1359   0015BA  5047               	movf	(ADC_Init@_adc+1)^0,w,c
  1360   0015BC  22DA               	addwfc	fsr2h,f,c
  1361   0015BE  50DF               	movf	indf2,w,c
  1362   0015C0  6E48               	movwf	??_ADC_Init^0,c
  1363   0015C2  4648               	rlncf	??_ADC_Init^0,f,c
  1364   0015C4  4648               	rlncf	??_ADC_Init^0,f,c
  1365   0015C6  50C2               	movf	194,w,c	;volatile
  1366   0015C8  1848               	xorwf	??_ADC_Init^0,w,c
  1367   0015CA  0BC3               	andlw	-61
  1368   0015CC  1848               	xorwf	??_ADC_Init^0,w,c
  1369   0015CE  6EC2               	movwf	194,c	;volatile
  1370   0015D0                     
  1371                           ;MCAL_Layer/ADC/hal_adc.c: 36:         adc_input_channel_pin_conf(_adc->select_channel);
  1372   0015D0  EE20 F004          	lfsr	2,4
  1373   0015D4  5046               	movf	ADC_Init@_adc^0,w,c
  1374   0015D6  26D9               	addwf	fsr2l,f,c
  1375   0015D8  5047               	movf	(ADC_Init@_adc+1)^0,w,c
  1376   0015DA  22DA               	addwfc	fsr2h,f,c
  1377   0015DC  50DF               	movf	indf2,w,c
  1378   0015DE  ECD5  F009         	call	_adc_input_channel_pin_conf
  1379   0015E2                     
  1380                           ;MCAL_Layer/ADC/hal_adc.c: 40:         adc_select_result_format(_adc);
  1381   0015E2  C046  F043         	movff	ADC_Init@_adc,adc_select_result_format@_adc
  1382   0015E6  C047  F044         	movff	ADC_Init@_adc+1,adc_select_result_format@_adc+1
  1383   0015EA  ECFC  F00B         	call	_adc_select_result_format	;wreg free
  1384   0015EE                     
  1385                           ;MCAL_Layer/ADC/hal_adc.c: 41:         adc_select_vol_ref(_adc);
  1386   0015EE  C046  F043         	movff	ADC_Init@_adc,adc_select_vol_ref@_adc
  1387   0015F2  C047  F044         	movff	ADC_Init@_adc+1,adc_select_vol_ref@_adc+1
  1388   0015F6  ECE8  F00B         	call	_adc_select_vol_ref	;wreg free
  1389   0015FA                     
  1390                           ;MCAL_Layer/ADC/hal_adc.c: 43:         (ADCON0bits.ADON = 1);
  1391   0015FA  80C2               	bsf	194,0,c	;volatile
  1392   0015FC                     l2441:
  1393                           
  1394                           ;MCAL_Layer/ADC/hal_adc.c: 47:     return ret;
  1395   0015FC  5049               	movf	ADC_Init@ret^0,w,c
  1396   0015FE  0012               	return		;funcret
  1397   001600                     __end_of_ADC_Init:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _adc_select_vol_ref *****************
  1401 ;; Defined at:
  1402 ;;		line 219 in file "MCAL_Layer/ADC/hal_adc.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  _adc            2    0[COMRAM] PTR const struct .
  1405 ;;		 -> adc_1(6), 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;Total ram usage:        2 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_ADC_Init
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text6
  1431   0017D0                     __ptext6:
  1432                           	callstack 0
  1433   0017D0                     _adc_select_vol_ref:
  1434                           	callstack 28
  1435   0017D0                     
  1436                           ;MCAL_Layer/ADC/hal_adc.c: 220:     if(_adc->voltage_ref == 0x00U){
  1437   0017D0  EE20 F005          	lfsr	2,5
  1438   0017D4  5043               	movf	adc_select_vol_ref@_adc^0,w,c
  1439   0017D6  26D9               	addwf	fsr2l,f,c
  1440   0017D8  5044               	movf	(adc_select_vol_ref@_adc+1)^0,w,c
  1441   0017DA  22DA               	addwfc	fsr2h,f,c
  1442   0017DC  B0DF               	btfsc	indf2,0,c
  1443   0017DE  EFF3  F00B         	goto	u1251
  1444   0017E2  EFF5  F00B         	goto	u1250
  1445   0017E6                     u1251:
  1446   0017E6  EFF9  F00B         	goto	l431
  1447   0017EA                     u1250:
  1448   0017EA  98C1               	bcf	193,4,c	;volatile
  1449   0017EC  9AC1               	bcf	193,5,c	;volatile
  1450   0017EE  EFFB  F00B         	goto	l433
  1451   0017F2                     l431:
  1452   0017F2  88C1               	bsf	193,4,c	;volatile
  1453   0017F4  8AC1               	bsf	193,5,c	;volatile
  1454   0017F6                     l433:
  1455   0017F6  0012               	return		;funcret
  1456   0017F8                     __end_of_adc_select_vol_ref:
  1457                           	callstack 0
  1458                           
  1459 ;; *************** function _adc_select_result_format *****************
  1460 ;; Defined at:
  1461 ;;		line 204 in file "MCAL_Layer/ADC/hal_adc.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  _adc            2    0[COMRAM] PTR const struct .
  1464 ;;		 -> adc_1(6), 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;Total ram usage:        2 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_ADC_Init
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text7
  1490   0017F8                     __ptext7:
  1491                           	callstack 0
  1492   0017F8                     _adc_select_result_format:
  1493                           	callstack 28
  1494   0017F8                     
  1495                           ;MCAL_Layer/ADC/hal_adc.c: 205:     if(_adc->format_status == 0x00U){
  1496   0017F8  EE20 F005          	lfsr	2,5
  1497   0017FC  5043               	movf	adc_select_result_format@_adc^0,w,c
  1498   0017FE  26D9               	addwf	fsr2l,f,c
  1499   001800  5044               	movf	(adc_select_result_format@_adc+1)^0,w,c
  1500   001802  22DA               	addwfc	fsr2h,f,c
  1501   001804  B2DF               	btfsc	indf2,1,c
  1502   001806  EF07  F00C         	goto	u1241
  1503   00180A  EF09  F00C         	goto	u1240
  1504   00180E                     u1241:
  1505   00180E  EF0C  F00C         	goto	l422
  1506   001812                     u1240:
  1507   001812                     
  1508                           ;MCAL_Layer/ADC/hal_adc.c: 206:         (ADCON2bits.ADFM = 0);;
  1509   001812  9EC0               	bcf	192,7,c	;volatile
  1510                           
  1511                           ;MCAL_Layer/ADC/hal_adc.c: 207:     }
  1512   001814  EF0D  F00C         	goto	l424
  1513   001818                     l422:
  1514                           
  1515                           ;MCAL_Layer/ADC/hal_adc.c: 209:        (ADCON2bits.ADFM = 1);;
  1516   001818  8EC0               	bsf	192,7,c	;volatile
  1517   00181A                     l424:
  1518   00181A  0012               	return		;funcret
  1519   00181C                     __end_of_adc_select_result_format:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _ADC_GetConversion_Blocking *****************
  1523 ;; Defined at:
  1524 ;;		line 137 in file "MCAL_Layer/ADC/hal_adc.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  _adc            2    7[COMRAM] PTR const struct .
  1527 ;;		 -> adc_1(6), 
  1528 ;;  adc_channel     1    9[COMRAM] enum E2965
  1529 ;;  conversion_r    2   10[COMRAM] PTR unsigned short 
  1530 ;;		 -> adc_result1(2), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  ret             1    0        unsigned char 
  1533 ;;  conversion_s    1   12[COMRAM] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      unsigned char 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1543 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;Total ram usage:        6 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 2
  1550 ;; This function calls:
  1551 ;;		_ADC_GetConversion_Status_Result
  1552 ;;		_ADC_Select_Channel
  1553 ;;		_ADC_Start_Conversion
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text8
  1560   0016A0                     __ptext8:
  1561                           	callstack 0
  1562   0016A0                     _ADC_GetConversion_Blocking:
  1563                           	callstack 28
  1564   0016A0                     
  1565                           ;MCAL_Layer/ADC/hal_adc.c: 139:     uint8 conversion_status = 0;
  1566   0016A0  0E00               	movlw	0
  1567   0016A2  6E4F               	movwf	ADC_GetConversion_Blocking@conversion_status^0,c
  1568   0016A4                     
  1569                           ;MCAL_Layer/ADC/hal_adc.c: 140:     if(_adc == ((void*)0) || conversion_result == ((void
      +                          *)0)) ret = (STD_ReturnType)0x00;
  1570   0016A4  504A               	movf	ADC_GetConversion_Blocking@_adc^0,w,c
  1571   0016A6  104B               	iorwf	(ADC_GetConversion_Blocking@_adc+1)^0,w,c
  1572   0016A8  B4D8               	btfsc	status,2,c
  1573   0016AA  EF59  F00B         	goto	u1581
  1574   0016AE  EF5B  F00B         	goto	u1580
  1575   0016B2                     u1581:
  1576   0016B2  EF64  F00B         	goto	l2585
  1577   0016B6                     u1580:
  1578   0016B6  504D               	movf	ADC_GetConversion_Blocking@conversion_result^0,w,c
  1579   0016B8  104E               	iorwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,w,c
  1580   0016BA  A4D8               	btfss	status,2,c
  1581   0016BC  EF62  F00B         	goto	u1591
  1582   0016C0  EF64  F00B         	goto	u1590
  1583   0016C4                     u1591:
  1584   0016C4  EF66  F00B         	goto	l2587
  1585   0016C8                     u1590:
  1586   0016C8                     l2585:
  1587   0016C8  EF85  F00B         	goto	l401
  1588   0016CC                     l2587:
  1589                           
  1590                           ;MCAL_Layer/ADC/hal_adc.c: 142:         ADC_Select_Channel(_adc, adc_channel);
  1591   0016CC  C04A  F046         	movff	ADC_GetConversion_Blocking@_adc,ADC_Select_Channel@_adc
  1592   0016D0  C04B  F047         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_Select_Channel@_adc+1
  1593   0016D4  C04C  F048         	movff	ADC_GetConversion_Blocking@adc_channel,ADC_Select_Channel@adc_channel
  1594   0016D8  ECBC  F00B         	call	_ADC_Select_Channel	;wreg free
  1595                           
  1596                           ;MCAL_Layer/ADC/hal_adc.c: 143:         ADC_Start_Conversion(_adc);
  1597   0016DC  C04A  F043         	movff	ADC_GetConversion_Blocking@_adc,ADC_Start_Conversion@_adc
  1598   0016E0  C04B  F044         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_Start_Conversion@_adc+1
  1599   0016E4  EC0E  F00C         	call	_ADC_Start_Conversion	;wreg free
  1600   0016E8                     l398:
  1601   0016E8  B2C2               	btfsc	194,1,c	;volatile
  1602   0016EA  EF79  F00B         	goto	u1601
  1603   0016EE  EF7B  F00B         	goto	u1600
  1604   0016F2                     u1601:
  1605   0016F2  EF74  F00B         	goto	l398
  1606   0016F6                     u1600:
  1607   0016F6                     
  1608                           ;MCAL_Layer/ADC/hal_adc.c: 145:         ADC_GetConversion_Status_Result(_adc, conversion
      +                          _result);
  1609   0016F6  C04A  F043         	movff	ADC_GetConversion_Blocking@_adc,ADC_GetConversion_Status_Result@_adc
  1610   0016FA  C04B  F044         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_GetConversion_Status_Result@_adc+1
  1611   0016FE  C04D  F045         	movff	ADC_GetConversion_Blocking@conversion_result,ADC_GetConversion_Status_Result@conv
      +                          erstion_result
  1612   001702  C04E  F046         	movff	ADC_GetConversion_Blocking@conversion_result+1,ADC_GetConversion_Status_Result@co
      +                          nverstion_result+1
  1613   001706  EC00  F00B         	call	_ADC_GetConversion_Status_Result	;wreg free
  1614   00170A                     l401:
  1615   00170A  0012               	return		;funcret
  1616   00170C                     __end_of_ADC_GetConversion_Blocking:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _ADC_Start_Conversion *****************
  1620 ;; Defined at:
  1621 ;;		line 87 in file "MCAL_Layer/ADC/hal_adc.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  _adc            2    0[COMRAM] PTR const struct .
  1624 ;;		 -> adc_1(6), 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  ret             1    0        unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      unsigned char 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;Total ram usage:        2 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_ADC_GetConversion_Blocking
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text9
  1650   00181C                     __ptext9:
  1651                           	callstack 0
  1652   00181C                     _ADC_Start_Conversion:
  1653                           	callstack 29
  1654   00181C                     
  1655                           ;MCAL_Layer/ADC/hal_adc.c: 89:     if(_adc == ((void*)0)) ret = (STD_ReturnType)0x00;
  1656   00181C  5043               	movf	ADC_Start_Conversion@_adc^0,w,c
  1657   00181E  1044               	iorwf	(ADC_Start_Conversion@_adc+1)^0,w,c
  1658   001820  A4D8               	btfss	status,2,c
  1659   001822  EF15  F00C         	goto	u1391
  1660   001826  EF17  F00C         	goto	u1390
  1661   00182A                     u1391:
  1662   00182A  EF19  F00C         	goto	l373
  1663   00182E                     u1390:
  1664   00182E  EF1A  F00C         	goto	l375
  1665   001832                     l373:
  1666                           
  1667                           ;MCAL_Layer/ADC/hal_adc.c: 91:         (ADCON0bits.GODONE = 1);
  1668   001832  82C2               	bsf	194,1,c	;volatile
  1669   001834                     l375:
  1670   001834  0012               	return		;funcret
  1671   001836                     __end_of_ADC_Start_Conversion:
  1672                           	callstack 0
  1673                           
  1674 ;; *************** function _ADC_Select_Channel *****************
  1675 ;; Defined at:
  1676 ;;		line 70 in file "MCAL_Layer/ADC/hal_adc.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  _adc            2    3[COMRAM] PTR const struct .
  1679 ;;		 -> adc_1(6), 
  1680 ;;  adc_channel     1    5[COMRAM] enum E2965
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  ret             1    0        unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      unsigned char 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1692 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;Total ram usage:        4 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 1
  1699 ;; This function calls:
  1700 ;;		_adc_input_channel_pin_conf
  1701 ;; This function is called by:
  1702 ;;		_ADC_GetConversion_Blocking
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text10
  1707   001778                     __ptext10:
  1708                           	callstack 0
  1709   001778                     _ADC_Select_Channel:
  1710                           	callstack 28
  1711   001778                     
  1712                           ;MCAL_Layer/ADC/hal_adc.c: 72:     if(_adc == ((void*)0)) ret = (STD_ReturnType)0x00;
  1713   001778  5046               	movf	ADC_Select_Channel@_adc^0,w,c
  1714   00177A  1047               	iorwf	(ADC_Select_Channel@_adc+1)^0,w,c
  1715   00177C  A4D8               	btfss	status,2,c
  1716   00177E  EFC3  F00B         	goto	u1381
  1717   001782  EFC5  F00B         	goto	u1380
  1718   001786                     u1381:
  1719   001786  EFC7  F00B         	goto	l2451
  1720   00178A                     u1380:
  1721   00178A  EFD3  F00B         	goto	l370
  1722   00178E                     l2451:
  1723                           
  1724                           ;MCAL_Layer/ADC/hal_adc.c: 74:         ADCON0bits.CHS = adc_channel;
  1725   00178E  C048  F049         	movff	ADC_Select_Channel@adc_channel,??_ADC_Select_Channel
  1726   001792  4649               	rlncf	??_ADC_Select_Channel^0,f,c
  1727   001794  4649               	rlncf	??_ADC_Select_Channel^0,f,c
  1728   001796  50C2               	movf	194,w,c	;volatile
  1729   001798  1849               	xorwf	??_ADC_Select_Channel^0,w,c
  1730   00179A  0BC3               	andlw	-61
  1731   00179C  1849               	xorwf	??_ADC_Select_Channel^0,w,c
  1732   00179E  6EC2               	movwf	194,c	;volatile
  1733   0017A0                     
  1734                           ;MCAL_Layer/ADC/hal_adc.c: 75:         adc_input_channel_pin_conf(adc_channel);
  1735   0017A0  5048               	movf	ADC_Select_Channel@adc_channel^0,w,c
  1736   0017A2  ECD5  F009         	call	_adc_input_channel_pin_conf
  1737   0017A6                     l370:
  1738   0017A6  0012               	return		;funcret
  1739   0017A8                     __end_of_ADC_Select_Channel:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _adc_input_channel_pin_conf *****************
  1743 ;; Defined at:
  1744 ;;		line 155 in file "MCAL_Layer/ADC/hal_adc.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  channel_adc     1    wreg     const enum E2965
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  channel_adc     1    2[COMRAM] const enum E2965
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;Total ram usage:        3 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_ADC_Init
  1768 ;;		_ADC_Select_Channel
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text11
  1773   0013AA                     __ptext11:
  1774                           	callstack 0
  1775   0013AA                     _adc_input_channel_pin_conf:
  1776                           	callstack 28
  1777                           
  1778                           ;incstack = 0
  1779                           ;adc_input_channel_pin_conf@channel_adc stored from wreg
  1780   0013AA  6E45               	movwf	adc_input_channel_pin_conf@channel_adc^0,c
  1781   0013AC                     
  1782                           ;MCAL_Layer/ADC/hal_adc.c: 156:     switch(channel_adc){
  1783   0013AC  EFFF  F009         	goto	l1321
  1784   0013B0                     l1293:
  1785                           
  1786                           ;MCAL_Layer/ADC/hal_adc.c: 158:             (TRISA |= (1 << 0x0));
  1787   0013B0  8092               	bsf	146,0,c	;volatile
  1788                           
  1789                           ;MCAL_Layer/ADC/hal_adc.c: 159:             break;
  1790   0013B2  EF40  F00A         	goto	l419
  1791   0013B6                     l1295:
  1792                           
  1793                           ;MCAL_Layer/ADC/hal_adc.c: 161:             (TRISA |= (1 << 0x1));
  1794   0013B6  8292               	bsf	146,1,c	;volatile
  1795                           
  1796                           ;MCAL_Layer/ADC/hal_adc.c: 162:             break;
  1797   0013B8  EF40  F00A         	goto	l419
  1798   0013BC                     l1297:
  1799                           
  1800                           ;MCAL_Layer/ADC/hal_adc.c: 164:             (TRISA |= (1 << 0x2));
  1801   0013BC  8492               	bsf	146,2,c	;volatile
  1802                           
  1803                           ;MCAL_Layer/ADC/hal_adc.c: 165:             break;
  1804   0013BE  EF40  F00A         	goto	l419
  1805   0013C2                     l1299:
  1806                           
  1807                           ;MCAL_Layer/ADC/hal_adc.c: 167:             (TRISA |= (1 << 0x3));
  1808   0013C2  8692               	bsf	146,3,c	;volatile
  1809                           
  1810                           ;MCAL_Layer/ADC/hal_adc.c: 168:             break;
  1811   0013C4  EF40  F00A         	goto	l419
  1812   0013C8                     l1301:
  1813                           
  1814                           ;MCAL_Layer/ADC/hal_adc.c: 170:             (TRISA |= (1 << 0x5));
  1815   0013C8  8A92               	bsf	146,5,c	;volatile
  1816                           
  1817                           ;MCAL_Layer/ADC/hal_adc.c: 171:             break;
  1818   0013CA  EF40  F00A         	goto	l419
  1819   0013CE                     l1303:
  1820                           
  1821                           ;MCAL_Layer/ADC/hal_adc.c: 173:             (TRISE |= (1 << 0x0));
  1822   0013CE  8096               	bsf	150,0,c	;volatile
  1823                           
  1824                           ;MCAL_Layer/ADC/hal_adc.c: 174:             break;
  1825   0013D0  EF40  F00A         	goto	l419
  1826   0013D4                     l1305:
  1827                           
  1828                           ;MCAL_Layer/ADC/hal_adc.c: 176:             (TRISE |= (1 << 0x1));
  1829   0013D4  8296               	bsf	150,1,c	;volatile
  1830                           
  1831                           ;MCAL_Layer/ADC/hal_adc.c: 177:             break;
  1832   0013D6  EF40  F00A         	goto	l419
  1833   0013DA                     l1307:
  1834                           
  1835                           ;MCAL_Layer/ADC/hal_adc.c: 179:             (TRISE |= (1 << 0x2));
  1836   0013DA  8496               	bsf	150,2,c	;volatile
  1837                           
  1838                           ;MCAL_Layer/ADC/hal_adc.c: 180:             break;
  1839   0013DC  EF40  F00A         	goto	l419
  1840   0013E0                     l1309:
  1841                           
  1842                           ;MCAL_Layer/ADC/hal_adc.c: 182:             (TRISB |= (1 << 0x2));
  1843   0013E0  8493               	bsf	147,2,c	;volatile
  1844                           
  1845                           ;MCAL_Layer/ADC/hal_adc.c: 183:             break;
  1846   0013E2  EF40  F00A         	goto	l419
  1847   0013E6                     l1311:
  1848                           
  1849                           ;MCAL_Layer/ADC/hal_adc.c: 185:             (TRISB |= (1 << 0x3));
  1850   0013E6  8693               	bsf	147,3,c	;volatile
  1851                           
  1852                           ;MCAL_Layer/ADC/hal_adc.c: 186:             break;
  1853   0013E8  EF40  F00A         	goto	l419
  1854   0013EC                     l1313:
  1855                           
  1856                           ;MCAL_Layer/ADC/hal_adc.c: 188:             (TRISB |= (1 << 0x1));
  1857   0013EC  8293               	bsf	147,1,c	;volatile
  1858                           
  1859                           ;MCAL_Layer/ADC/hal_adc.c: 189:             break;
  1860   0013EE  EF40  F00A         	goto	l419
  1861   0013F2                     l1315:
  1862                           
  1863                           ;MCAL_Layer/ADC/hal_adc.c: 191:             (TRISB |= (1 << 0x4));
  1864   0013F2  8893               	bsf	147,4,c	;volatile
  1865                           
  1866                           ;MCAL_Layer/ADC/hal_adc.c: 192:             break;
  1867   0013F4  EF40  F00A         	goto	l419
  1868   0013F8                     l1317:
  1869                           
  1870                           ;MCAL_Layer/ADC/hal_adc.c: 194:             (TRISB |= (1 << 0x0));
  1871   0013F8  8093               	bsf	147,0,c	;volatile
  1872                           
  1873                           ;MCAL_Layer/ADC/hal_adc.c: 195:             break;
  1874   0013FA  EF40  F00A         	goto	l419
  1875   0013FE                     l1321:
  1876   0013FE  5045               	movf	adc_input_channel_pin_conf@channel_adc^0,w,c
  1877   001400  6E43               	movwf	??_adc_input_channel_pin_conf^0,c
  1878   001402  6A44               	clrf	(??_adc_input_channel_pin_conf+1)^0,c
  1879                           
  1880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1881                           ; Switch size 1, requested type "simple"
  1882                           ; Number of cases is 1, Range of values is 0 to 0
  1883                           ; switch strategies available:
  1884                           ; Name         Instructions Cycles
  1885                           ; simple_byte            4     3 (average)
  1886                           ;	Chosen strategy is simple_byte
  1887   001404  5044               	movf	(??_adc_input_channel_pin_conf+1)^0,w,c
  1888   001406  0A00               	xorlw	0	; case 0
  1889   001408  B4D8               	btfsc	status,2,c
  1890   00140A  EF09  F00A         	goto	l3205
  1891   00140E  EF40  F00A         	goto	l419
  1892   001412                     l3205:
  1893                           
  1894                           ; Switch size 1, requested type "simple"
  1895                           ; Number of cases is 13, Range of values is 0 to 12
  1896                           ; switch strategies available:
  1897                           ; Name         Instructions Cycles
  1898                           ; simple_byte           40    21 (average)
  1899                           ;	Chosen strategy is simple_byte
  1900   001412  5043               	movf	??_adc_input_channel_pin_conf^0,w,c
  1901   001414  0A00               	xorlw	0	; case 0
  1902   001416  B4D8               	btfsc	status,2,c
  1903   001418  EFD8  F009         	goto	l1293
  1904   00141C  0A01               	xorlw	1	; case 1
  1905   00141E  B4D8               	btfsc	status,2,c
  1906   001420  EFDB  F009         	goto	l1295
  1907   001424  0A03               	xorlw	3	; case 2
  1908   001426  B4D8               	btfsc	status,2,c
  1909   001428  EFDE  F009         	goto	l1297
  1910   00142C  0A01               	xorlw	1	; case 3
  1911   00142E  B4D8               	btfsc	status,2,c
  1912   001430  EFE1  F009         	goto	l1299
  1913   001434  0A07               	xorlw	7	; case 4
  1914   001436  B4D8               	btfsc	status,2,c
  1915   001438  EFE4  F009         	goto	l1301
  1916   00143C  0A01               	xorlw	1	; case 5
  1917   00143E  B4D8               	btfsc	status,2,c
  1918   001440  EFE7  F009         	goto	l1303
  1919   001444  0A03               	xorlw	3	; case 6
  1920   001446  B4D8               	btfsc	status,2,c
  1921   001448  EFEA  F009         	goto	l1305
  1922   00144C  0A01               	xorlw	1	; case 7
  1923   00144E  B4D8               	btfsc	status,2,c
  1924   001450  EFED  F009         	goto	l1307
  1925   001454  0A0F               	xorlw	15	; case 8
  1926   001456  B4D8               	btfsc	status,2,c
  1927   001458  EFF0  F009         	goto	l1309
  1928   00145C  0A01               	xorlw	1	; case 9
  1929   00145E  B4D8               	btfsc	status,2,c
  1930   001460  EFF3  F009         	goto	l1311
  1931   001464  0A03               	xorlw	3	; case 10
  1932   001466  B4D8               	btfsc	status,2,c
  1933   001468  EFF6  F009         	goto	l1313
  1934   00146C  0A01               	xorlw	1	; case 11
  1935   00146E  B4D8               	btfsc	status,2,c
  1936   001470  EFF9  F009         	goto	l1315
  1937   001474  0A07               	xorlw	7	; case 12
  1938   001476  B4D8               	btfsc	status,2,c
  1939   001478  EFFC  F009         	goto	l1317
  1940   00147C  EF40  F00A         	goto	l419
  1941   001480                     l419:
  1942   001480  0012               	return		;funcret
  1943   001482                     __end_of_adc_input_channel_pin_conf:
  1944                           	callstack 0
  1945                           
  1946 ;; *************** function _ADC_GetConversion_Status_Result *****************
  1947 ;; Defined at:
  1948 ;;		line 117 in file "MCAL_Layer/ADC/hal_adc.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  _adc            2    0[COMRAM] PTR const struct .
  1951 ;;		 -> adc_1(6), 
  1952 ;;  converstion_    2    2[COMRAM] PTR unsigned short 
  1953 ;;		 -> adc_result1(2), 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  ret             1    0        unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      unsigned char 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1965 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;Total ram usage:        7 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_ADC_GetConversion_Blocking
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text12
  1979   001600                     __ptext12:
  1980                           	callstack 0
  1981   001600                     _ADC_GetConversion_Status_Result:
  1982                           	callstack 29
  1983   001600                     
  1984                           ;MCAL_Layer/ADC/hal_adc.c: 119:     if(_adc == ((void*)0) || converstion_result == ((voi
      +                          d*)0)) ret = (STD_ReturnType)0x00;
  1985   001600  5043               	movf	ADC_GetConversion_Status_Result@_adc^0,w,c
  1986   001602  1044               	iorwf	(ADC_GetConversion_Status_Result@_adc+1)^0,w,c
  1987   001604  B4D8               	btfsc	status,2,c
  1988   001606  EF07  F00B         	goto	u1401
  1989   00160A  EF09  F00B         	goto	u1400
  1990   00160E                     u1401:
  1991   00160E  EF12  F00B         	goto	l2469
  1992   001612                     u1400:
  1993   001612  5045               	movf	ADC_GetConversion_Status_Result@converstion_result^0,w,c
  1994   001614  1046               	iorwf	(ADC_GetConversion_Status_Result@converstion_result+1)^0,w,c
  1995   001616  A4D8               	btfss	status,2,c
  1996   001618  EF10  F00B         	goto	u1411
  1997   00161C  EF12  F00B         	goto	u1410
  1998   001620                     u1411:
  1999   001620  EF14  F00B         	goto	l2471
  2000   001624                     u1410:
  2001   001624                     l2469:
  2002   001624  EF4F  F00B         	goto	l391
  2003   001628                     l2471:
  2004                           
  2005                           ;MCAL_Layer/ADC/hal_adc.c: 121:         if(_adc->format_status == 0x00U){
  2006   001628  EE20 F005          	lfsr	2,5
  2007   00162C  5043               	movf	ADC_GetConversion_Status_Result@_adc^0,w,c
  2008   00162E  26D9               	addwf	fsr2l,f,c
  2009   001630  5044               	movf	(ADC_GetConversion_Status_Result@_adc+1)^0,w,c
  2010   001632  22DA               	addwfc	fsr2h,f,c
  2011   001634  B2DF               	btfsc	indf2,1,c
  2012   001636  EF1F  F00B         	goto	u1421
  2013   00163A  EF21  F00B         	goto	u1420
  2014   00163E                     u1421:
  2015   00163E  EF3D  F00B         	goto	l2475
  2016   001642                     u1420:
  2017   001642                     
  2018                           ;MCAL_Layer/ADC/hal_adc.c: 122:             *converstion_result = (uint16)(((ADRESH << 8
      +                          ) + ADRESL) >> 6);
  2019   001642  50C3               	movf	195,w,c	;volatile
  2020   001644  CFC4 F047          	movff	4036,??_ADC_GetConversion_Status_Result	;volatile
  2021   001648  6A48               	clrf	(??_ADC_GetConversion_Status_Result+1)^0,c
  2022   00164A  C047  F048         	movff	??_ADC_GetConversion_Status_Result,??_ADC_GetConversion_Status_Result+1
  2023   00164E  6A47               	clrf	??_ADC_GetConversion_Status_Result^0,c
  2024   001650  2647               	addwf	??_ADC_GetConversion_Status_Result^0,f,c
  2025   001652  0E00               	movlw	0
  2026   001654  2248               	addwfc	(??_ADC_GetConversion_Status_Result+1)^0,f,c
  2027   001656  0E06               	movlw	6
  2028   001658  6E49               	movwf	(??_ADC_GetConversion_Status_Result+2)^0,c
  2029   00165A                     u1435:
  2030   00165A  3448               	rlcf	(??_ADC_GetConversion_Status_Result+1)^0,w,c
  2031   00165C  3248               	rrcf	(??_ADC_GetConversion_Status_Result+1)^0,f,c
  2032   00165E  3247               	rrcf	??_ADC_GetConversion_Status_Result^0,f,c
  2033   001660  2E49               	decfsz	(??_ADC_GetConversion_Status_Result+2)^0,f,c
  2034   001662  EF2D  F00B         	goto	u1435
  2035   001666  C045  FFD9         	movff	ADC_GetConversion_Status_Result@converstion_result,fsr2l
  2036   00166A  C046  FFDA         	movff	ADC_GetConversion_Status_Result@converstion_result+1,fsr2h
  2037   00166E  C047  FFDE         	movff	??_ADC_GetConversion_Status_Result,postinc2
  2038   001672  C048  FFDD         	movff	??_ADC_GetConversion_Status_Result+1,postdec2
  2039                           
  2040                           ;MCAL_Layer/ADC/hal_adc.c: 123:         }
  2041   001676  EF4F  F00B         	goto	l391
  2042   00167A                     l2475:
  2043                           
  2044                           ;MCAL_Layer/ADC/hal_adc.c: 125:            *converstion_result = (uint16)((ADRESH << 8) 
      +                          + ADRESL);
  2045   00167A  50C3               	movf	195,w,c	;volatile
  2046   00167C  CFC4 F047          	movff	4036,??_ADC_GetConversion_Status_Result	;volatile
  2047   001680  6A48               	clrf	(??_ADC_GetConversion_Status_Result+1)^0,c
  2048   001682  C047  F048         	movff	??_ADC_GetConversion_Status_Result,??_ADC_GetConversion_Status_Result+1
  2049   001686  6A47               	clrf	??_ADC_GetConversion_Status_Result^0,c
  2050   001688  2647               	addwf	??_ADC_GetConversion_Status_Result^0,f,c
  2051   00168A  0E00               	movlw	0
  2052   00168C  2248               	addwfc	(??_ADC_GetConversion_Status_Result+1)^0,f,c
  2053   00168E  C045  FFD9         	movff	ADC_GetConversion_Status_Result@converstion_result,fsr2l
  2054   001692  C046  FFDA         	movff	ADC_GetConversion_Status_Result@converstion_result+1,fsr2h
  2055   001696  C047  FFDE         	movff	??_ADC_GetConversion_Status_Result,postinc2
  2056   00169A  C048  FFDD         	movff	??_ADC_GetConversion_Status_Result+1,postdec2
  2057   00169E                     l391:
  2058   00169E  0012               	return		;funcret
  2059   0016A0                     __end_of_ADC_GetConversion_Status_Result:
  2060                           	callstack 0
  2061                           
  2062                           	psect	rparam
  2063   000000                     
  2064                           	psect	idloc
  2065                           
  2066                           ;Config register IDLOC0 @ 0x200000
  2067                           ;	unspecified, using default values
  2068   200000                     	org	2097152
  2069   200000  FF                 	db	255
  2070                           
  2071                           ;Config register IDLOC1 @ 0x200001
  2072                           ;	unspecified, using default values
  2073   200001                     	org	2097153
  2074   200001  FF                 	db	255
  2075                           
  2076                           ;Config register IDLOC2 @ 0x200002
  2077                           ;	unspecified, using default values
  2078   200002                     	org	2097154
  2079   200002  FF                 	db	255
  2080                           
  2081                           ;Config register IDLOC3 @ 0x200003
  2082                           ;	unspecified, using default values
  2083   200003                     	org	2097155
  2084   200003  FF                 	db	255
  2085                           
  2086                           ;Config register IDLOC4 @ 0x200004
  2087                           ;	unspecified, using default values
  2088   200004                     	org	2097156
  2089   200004  FF                 	db	255
  2090                           
  2091                           ;Config register IDLOC5 @ 0x200005
  2092                           ;	unspecified, using default values
  2093   200005                     	org	2097157
  2094   200005  FF                 	db	255
  2095                           
  2096                           ;Config register IDLOC6 @ 0x200006
  2097                           ;	unspecified, using default values
  2098   200006                     	org	2097158
  2099   200006  FF                 	db	255
  2100                           
  2101                           ;Config register IDLOC7 @ 0x200007
  2102                           ;	unspecified, using default values
  2103   200007                     	org	2097159
  2104   200007  FF                 	db	255
  2105                           
  2106                           	psect	config
  2107                           
  2108                           ; Padding undefined space
  2109   300000                     	org	3145728
  2110   300000  FF                 	db	255
  2111                           
  2112                           ;Config register CONFIG1H @ 0x300001
  2113                           ;	Oscillator Selection bits
  2114                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  2115                           ;	Fail-Safe Clock Monitor Enable bit
  2116                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2117                           ;	Internal/External Oscillator Switchover bit
  2118                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2119   300001                     	org	3145729
  2120   300001  07                 	db	7
  2121                           
  2122                           ;Config register CONFIG2L @ 0x300002
  2123                           ;	Power-up Timer Enable bit
  2124                           ;	PWRT = OFF, PWRT disabled
  2125                           ;	Brown-out Reset Enable bits
  2126                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2127                           ;	Brown Out Reset Voltage bits
  2128                           ;	BORV = 3, Minimum setting
  2129   300002                     	org	3145730
  2130   300002  1F                 	db	31
  2131                           
  2132                           ;Config register CONFIG2H @ 0x300003
  2133                           ;	Watchdog Timer Enable bit
  2134                           ;	WDT = ON, WDT enabled
  2135                           ;	Watchdog Timer Postscale Select bits
  2136                           ;	WDTPS = 32768, 1:32768
  2137   300003                     	org	3145731
  2138   300003  1F                 	db	31
  2139                           
  2140                           ; Padding undefined space
  2141   300004                     	org	3145732
  2142   300004  FF                 	db	255
  2143                           
  2144                           ;Config register CONFIG3H @ 0x300005
  2145                           ;	CCP2 MUX bit
  2146                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2147                           ;	PORTB A/D Enable bit
  2148                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2149                           ;	Low-Power Timer1 Oscillator Enable bit
  2150                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2151                           ;	MCLR Pin Enable bit
  2152                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2153   300005                     	org	3145733
  2154   300005  81                 	db	129
  2155                           
  2156                           ;Config register CONFIG4L @ 0x300006
  2157                           ;	Stack Full/Underflow Reset Enable bit
  2158                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2159                           ;	Single-Supply ICSP Enable bit
  2160                           ;	LVP = ON, Single-Supply ICSP enabled
  2161                           ;	Extended Instruction Set Enable bit
  2162                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2163                           ;	Background Debugger Enable bit
  2164                           ;	DEBUG = 0x1, unprogrammed default
  2165   300006                     	org	3145734
  2166   300006  85                 	db	133
  2167                           
  2168                           ; Padding undefined space
  2169   300007                     	org	3145735
  2170   300007  FF                 	db	255
  2171                           
  2172                           ;Config register CONFIG5L @ 0x300008
  2173                           ;	Code Protection bit
  2174                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2175                           ;	Code Protection bit
  2176                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2177                           ;	Code Protection bit
  2178                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2179                           ;	Code Protection bit
  2180                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2181   300008                     	org	3145736
  2182   300008  0F                 	db	15
  2183                           
  2184                           ;Config register CONFIG5H @ 0x300009
  2185                           ;	Boot Block Code Protection bit
  2186                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2187                           ;	Data EEPROM Code Protection bit
  2188                           ;	CPD = OFF, Data EEPROM not code-protected
  2189   300009                     	org	3145737
  2190   300009  C0                 	db	192
  2191                           
  2192                           ;Config register CONFIG6L @ 0x30000A
  2193                           ;	Write Protection bit
  2194                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2195                           ;	Write Protection bit
  2196                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2197                           ;	Write Protection bit
  2198                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2199                           ;	Write Protection bit
  2200                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2201   30000A                     	org	3145738
  2202   30000A  0F                 	db	15
  2203                           
  2204                           ;Config register CONFIG6H @ 0x30000B
  2205                           ;	Configuration Register Write Protection bit
  2206                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2207                           ;	Boot Block Write Protection bit
  2208                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2209                           ;	Data EEPROM Write Protection bit
  2210                           ;	WRTD = OFF, Data EEPROM not write-protected
  2211   30000B                     	org	3145739
  2212   30000B  E0                 	db	224
  2213                           
  2214                           ;Config register CONFIG7L @ 0x30000C
  2215                           ;	Table Read Protection bit
  2216                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2217                           ;	Table Read Protection bit
  2218                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2219                           ;	Table Read Protection bit
  2220                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2221                           ;	Table Read Protection bit
  2222                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2223   30000C                     	org	3145740
  2224   30000C  0F                 	db	15
  2225                           
  2226                           ;Config register CONFIG7H @ 0x30000D
  2227                           ;	Boot Block Table Read Protection bit
  2228                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2229   30000D                     	org	3145741
  2230   30000D  40                 	db	64
  2231                           tosu	equ	0xFFF
  2232                           tosh	equ	0xFFE
  2233                           tosl	equ	0xFFD
  2234                           stkptr	equ	0xFFC
  2235                           pclatu	equ	0xFFB
  2236                           pclath	equ	0xFFA
  2237                           pcl	equ	0xFF9
  2238                           tblptru	equ	0xFF8
  2239                           tblptrh	equ	0xFF7
  2240                           tblptrl	equ	0xFF6
  2241                           tablat	equ	0xFF5
  2242                           prodh	equ	0xFF4
  2243                           prodl	equ	0xFF3
  2244                           indf0	equ	0xFEF
  2245                           postinc0	equ	0xFEE
  2246                           postdec0	equ	0xFED
  2247                           preinc0	equ	0xFEC
  2248                           plusw0	equ	0xFEB
  2249                           fsr0h	equ	0xFEA
  2250                           fsr0l	equ	0xFE9
  2251                           wreg	equ	0xFE8
  2252                           indf1	equ	0xFE7
  2253                           postinc1	equ	0xFE6
  2254                           postdec1	equ	0xFE5
  2255                           preinc1	equ	0xFE4
  2256                           plusw1	equ	0xFE3
  2257                           fsr1h	equ	0xFE2
  2258                           fsr1l	equ	0xFE1
  2259                           bsr	equ	0xFE0
  2260                           indf2	equ	0xFDF
  2261                           postinc2	equ	0xFDE
  2262                           postdec2	equ	0xFDD
  2263                           preinc2	equ	0xFDC
  2264                           plusw2	equ	0xFDB
  2265                           fsr2h	equ	0xFDA
  2266                           fsr2l	equ	0xFD9
  2267                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        40
    BSS         26
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     15      83
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S1644$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1644$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gpio_pin_read_logic@logic	PTR enum E2965 size(2) Largest target is 1
		 -> logic_Ouput_sensor(COMRAM[1]), logic_input_sensor(COMRAM[1]), button_read_state@Pin_Logic_Status(COMRAM[1]), keypad_get_value@logic_btn(COMRAM[1]), 

    gpio_pin_read_logic@_pin_config_t	PTR const struct . size(2) Largest target is 1
		 -> pin_3(COMRAM[1]), pin_2(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config_t	PTR const struct . size(2) Largest target is 1
		 -> pin_1(COMRAM[1]), relay_turn_off@relayy(COMRAM[1]), relay_turn_on@relayy(COMRAM[1]), relay_initialize@relayy(COMRAM[1]), 
		 -> led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), Dc_motor_stop@dc_motor_pin_2(COMRAM[1]), 
		 -> Dc_motor_stop@dc_motor_pin_1(COMRAM[1]), Dc_motor_turn_right@dc_motor_pin_2(COMRAM[1]), Dc_motor_turn_right@dc_motor_pin_1(COMRAM[1]), Dc_motor_turn_left@dc_motor_pin_2(COMRAM[1]), 
		 -> Dc_motor_turn_left@dc_motor_pin_1(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_2(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_1(COMRAM[1]), 

    gpio_pin_direction_init@_pin_config_t	PTR const struct . size(2) Largest target is 1
		 -> pin_1(COMRAM[1]), pin_3(COMRAM[1]), pin_2(COMRAM[1]), relay_initialize@relayy(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_2(COMRAM[1]), Dc_motor_initialize@dc_motor_pin_1(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), 
		 -> PORTA(BITBIGSFRllll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATB(BITBIGSFRlllh[1]), 
		 -> LATA(BITBIGSFRllll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRllll[1]), 

    adc_select_vol_ref@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    adc_select_vol_ref@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    adc_select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    adc_select_result_format@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_GetConversion_Blocking@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adc_result1(COMRAM[2]), 

    ADC_GetConversion_Blocking@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_GetConversion_Status_Result@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ADC_GetConversion_Status_Result@converstion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adc_result1(COMRAM[2]), 

    ADC_GetConversion_Status_Result@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_Start_Conversion@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_Select_Channel@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    S743$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_ADC_GetConversion_Blocking
    _Application_initialize->_gpio_pin_direction_init
    _ADC_Init->_adc_input_channel_pin_conf
    _ADC_GetConversion_Blocking->_ADC_GetConversion_Status_Result
    _ADC_GetConversion_Blocking->_ADC_Select_Channel
    _ADC_Select_Channel->_adc_input_channel_pin_conf

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13605
                                             13 COMRAM     2     2      0
         _ADC_GetConversion_Blocking
             _Application_initialize
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_pin_write_logic                                10     7      3    9625
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _gpio_pin_read_logic                                 10     6      4     786
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0    2186
                           _ADC_Init
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_direction_init                              9     7      2    1721
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     465
                                              3 COMRAM     4     2      2
         _adc_input_channel_pin_conf
           _adc_select_result_format
                 _adc_select_vol_ref
 ---------------------------------------------------------------------------------
 (3) _adc_select_vol_ref                                   2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _adc_select_result_format                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           7     2      5    1008
                                              7 COMRAM     6     1      5
    _ADC_GetConversion_Status_Result
                 _ADC_Select_Channel
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_Start_Conversion                                 3     1      2     106
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Channel                                   5     2      3     241
                                              3 COMRAM     4     1      3
         _adc_input_channel_pin_conf
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_pin_conf                           3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion_Status_Result                      8     4      4     270
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _ADC_GetConversion_Status_Result
     _ADC_Select_Channel
       _adc_input_channel_pin_conf
     _ADC_Start_Conversion
   _Application_initialize
     _ADC_Init
       _adc_input_channel_pin_conf
       _adc_select_result_format
       _adc_select_vol_ref
     _gpio_pin_direction_init
   _gpio_pin_read_logic
   _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      F      53       1       65.4%
BITBIGSFRhh         3B      0       0      37        0.0%
BITBIGSFRllhh       29      0       0      38        0.0%
BITBIGSFRlllh        4      0       0      39        0.0%
BITBIGSFRllll        4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      53      26        0.0%
DATA                 0      0      53       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 02 15:00:18 2022

            adc_input_channel_pin_conf@channel_adc 0045                                                l401 170A  
                                              l500 12C0                                                l422 1818  
                                              l431 17F2                                                l424 181A  
                                              l360 15FE                                                l433 17F6  
                                              l370 17A6                                                l419 1480  
                                              l507 1556                                                l428 17EA  
                                              l373 1832                                                l358 1576  
                                              l391 169E                                                l375 1834  
                                              l481 1176                                                l398 16E8  
                                              l598 1744            __end_of_ADC_GetConversion_Status_Result 16A0  
                ??_ADC_GetConversion_Status_Result 0047                   ?_ADC_GetConversion_Status_Result 0043  
                  _ADC_GetConversion_Status_Result 1600                                                _ret 001F  
                              led_initialize@F3043 0038                                                prod 000FF3  
                            relay_initialize@F3037 0034                                                wreg 000FE8  
                                             l1301 13C8                                               l1311 13E6  
                                             l1303 13CE                                               l1313 13EC  
                                             l1305 13D4                                               l1321 13FE  
                                             l1315 13F2                                               l1307 13DA  
                                             l1317 13F8                                               l1309 13E0  
                                             l3201 12A8                                               l1291 13AC  
                                             l3203 115E                                               l3205 1412  
                                             l1293 13B0                                               l2341 17F8  
                                             l1295 13B6                                               l2343 1812  
                                             l2431 1578                                               l2351 102C  
                                             l2511 14AA                                               l1297 13BC  
                                             l2345 17D0                                               l2433 15D0  
                                             l2441 15FC                                               l2425 1558  
                                             l2353 104A                                               l2513 14C8  
                                             l2505 1482                                               l3161 12C6  
                                             l1299 13C2                                               l2451 178E  
                                             l2435 15E2                                               l2427 155C  
                                             l2363 1132                                               l2355 106C  
                                             l2347 1016                                               l2515 14EA  
                                             l2507 1486                                               l3171 130E  
                                             l3163 12CA                                               l2453 17A0  
                                             l2445 1778                                               l2461 182E  
                                             l2437 15EE                                               l2429 156E  
                                             l2357 1074                                               l2365 1174  
                                             l2349 101A                                               l2517 14F2  
                                             l2509 1498                                               l3181 134E  
                                             l3173 1324                                               l3165 12CE  
                                             l2471 1628                                               l2463 1600  
                                             l2447 1778                                               l2439 15FA  
                                             l2359 10D6                                               l2519 1554  
                                             l3183 1364                                               l3175 1334  
                                             l3167 12E6                                               l3159 12C2  
                                             l2473 1642                                               l2465 1600  
                                             l2449 178A                                               l2457 181C  
                                             l2481 117C                                               l3185 137E  
                                             l3177 1338                                               l3169 12FA  
                                             l2475 167A                                               l2467 1612  
                                             l2459 181C                                               l2491 1238  
                                             l2483 118E                                               l3187 1392  
                                             l3179 1348                                               l2469 1624  
                                             l2581 16A4                                               l2485 11AC  
                                             l2583 16B6                                               l2495 1294  
                                             l2487 11CE                                               l2479 1178  
                                             l2585 16C8                                               l2593 170C  
                                             l2489 11D6                                               l2497 12BE  
                                             l2587 16CC                                               l2579 16A0  
                                             l2595 171A                                               l2589 16F6  
                                             l2597 1728                                               l2599 1736  
                                             STR_1 1011                                               u1310 114A  
                                             u1311 1144                                               u1400 1612  
                                             u1240 1812                                               u1320 114C  
                                             u1304 10F6                                               u2200 137E  
                                             u1401 160E                                               u1241 180E  
                                             u1305 10F2                                               u2201 137A  
                                             u1410 1624                                               u1250 17EA  
                                             u1411 1620                                               u1251 17E6  
                                             u1420 1642                                               u1260 102C  
                                             u1500 14AA                                               u1421 163E  
                                             u1261 1028                                               u1501 14A6  
                                             _LATA 000F89                                               u1270 104A  
                                             u1510 14C8                                               _LATB 000F8A  
                                             u1271 1046                                               u1511 14C4  
                                             _LATC 000F8B                                               u1600 16F6  
                                             u1280 106C                                               u1520 14EA  
                                             u1440 118E                                               _LATD 000F8C  
                                             u1601 16F2                                               u1281 1068  
                                             u1521 14E6                                               u1441 118A  
                                             u2217 1318                                               _LATE 000F8D  
                                             u1370 156E                                               u1450 11AC  
                                             u2170 1334                                               u1435 165A  
                                             u1371 156A                                               u1451 11A8  
                                             u2171 1330                                               u1380 178A  
                                             u1460 11CE                                               u2180 1348  
                                             u1381 1786                                               u1461 11CA  
                                             u2181 1344                                               u1390 182E  
                                             u1294 1094                                               u1534 1540  
                                             u2190 1364                                               u1391 182A  
                                             u1295 1090                                               u1535 153C  
                                             u2191 1360                                               u1490 1498  
                                             u1474 11F6                                               u1491 1494  
                                             u1475 11F2                                               u1580 16B6  
                                             u1484 1258                                               u1581 16B2  
                                             u1485 1254                                               u1590 16C8  
                                             u1591 16C4                                               _main 12C2  
                                             fsr2h 000FDA                                               indf2 000FDF  
                                             fsr1l 000FE1                                               fsr2l 000FD9  
                         ?_gpio_pin_direction_init 0043                                   __end_of_ADC_Init 1600  
                                             prodl 000FF3                                               start 0000  
                                     ___param_bank 000000                         __end_of_ADC_Select_Channel 17A8  
                             _gpio_pin_write_logic 1178                                              ?_main 0043  
                               _adc_select_vol_ref 17D0                                relay_turn_off@F3047 0032  
                                            _PORTA 000F80                                              _PORTB 000F81  
                                            _PORTC 000F82                                              _PORTD 000F83  
                                            _PORTE 000F84                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                                            _adc_1 0020                               _ADC_Start_Conversion 181C  
                                            _pin_1 0028                                              _pin_2 0027  
                                            _pin_3 0026                                ?_adc_select_vol_ref 0043  
                                            tablat 000FF5                                              status 000FD8  
                                  __initialization 1746                                       __end_of_main 13AA  
                             ??_adc_select_vol_ref 0045                              ?_gpio_pin_write_logic 0043  
                         gpio_pin_read_logic@logic 0045                                             ??_main 0050  
                                    __activetblptr 000003                                   led_turn_on@F3048 0037  
                        ?_adc_select_result_format 0043                              ?_ADC_Start_Conversion 0043  
                                           _ADRESH 000FC4                                             _ADRESL 000FC3  
                                    _tris_register 0015                             adc_select_vol_ref@_adc 0043  
                          ?_Application_initialize 0043                                             clear_0 176C  
                                           isa$std 000001                                       __pdataCOMRAM 0001  
                      ?_adc_input_channel_pin_conf 0043                                          ?_ADC_Init 0046  
                                     __mediumconst 0000                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
                                       __accesstop 0080                            __end_of__initialization 1772  
                                    ___rparam_used 000001                             ??_gpio_pin_write_logic 0046  
                                   __pcstackCOMRAM 0043                     __end_of_Application_initialize 1746  
                     ??_ADC_GetConversion_Blocking 004F                                         ??_ADC_Init 0048  
                           ??_ADC_Start_Conversion 0045                                         __pnvCOMRAM 0052  
                               _logic_input_sensor 0053                                  led_turn_off@F3053 0036  
                         Dc_motor_initialize@F3042 0040                           Dc_motor_initialize@F3044 003F  
                   ADC_GetConversion_Blocking@_adc 004A                                 _ADC_Select_Channel 1778  
                              ?_ADC_Select_Channel 0046                                         _btn_values 1001  
                                          __Hparam 0000                                       ADC_Init@_adc 0046  
                                          __Lparam 0000                                _gpio_pin_read_logic 1482  
                             ??_ADC_Select_Channel 0049                                       __psmallconst 1000  
                                          __pcinit 1746                                            __ramtop 1000  
                                          __ptext0 12C2                                            __ptext1 1178  
                                          __ptext2 1482                                            __ptext3 170C  
                                          __ptext4 1016                                            __ptext5 1558  
                                          __ptext6 17D0                                            __ptext7 17F8  
                                          __ptext8 16A0                                            __ptext9 181C  
                             ?_gpio_pin_read_logic 0043                               end_of_initialization 1772  
      ADC_GetConversion_Blocking@conversion_result 004D        ADC_GetConversion_Blocking@conversion_status 004F  
                gpio_pin_write_logic@_pin_config_t 0043                 __end_of_ADC_GetConversion_Blocking 170C  
                       _ADC_GetConversion_Blocking 16A0                                            postdec1 000FE5  
                                          postdec2 000FDD                                            postinc0 000FEE  
                                          postinc2 000FDE                           ADC_Start_Conversion@_adc 0043  
                            ??_gpio_pin_read_logic 0047                                 relay_turn_on@F3042 0033  
                          _gpio_pin_direction_init 1016                                      __pidataCOMRAM 17A8  
                         _adc_select_result_format 17F8                 __end_of_adc_input_channel_pin_conf 1482  
                       _adc_input_channel_pin_conf 13AA                                        _adc_result1 0041  
                                      _adc_result2 002F                                        _adc_result3 002D  
                                      _adc_result4 002B                                start_initialization 1746  
                               _logic_Ouput_sensor 0052                                       _lat_register 000B  
            ADC_GetConversion_Blocking@adc_channel 004C                                 _number_of_students 0029  
              ADC_GetConversion_Status_Result@_adc 0043                                        __pbssCOMRAM 0029  
                        ??_gpio_pin_direction_init 0045                          gpio_pin_write_logic@logic 0045  
                                      __smallconst 1000                       adc_select_result_format@_adc 0043  
                                         _ADC_Init 1558  ADC_GetConversion_Status_Result@converstion_result 0045  
                                      ADC_Init@ret 0049                           ??_Application_initialize 004C  
                      ?_ADC_GetConversion_Blocking 004A                                         _ADCON0bits 000FC2  
                                       _ADCON1bits 000FC1                                         _ADCON2bits 000FC0  
                            led_toggle_logic@F3058 0035                    __end_of_gpio_pin_direction_init 1178  
                     ??_adc_input_channel_pin_conf 0043                            gpio_pin_write_logic@ret 004C  
                                        copy_data0 175A                      ADC_Select_Channel@adc_channel 0048  
                               Dc_motor_stop@F3065 003A                                 Dc_motor_stop@F3067 0039  
                           gpio_pin_read_logic@ret 004C                                           __Hrparam 0000  
                       ??_adc_select_result_format 0045                         __end_of_adc_select_vol_ref 17F8  
                                         __Lrparam 0000                                 __end_of_btn_values 1011  
                      __end_of_gpio_pin_read_logic 1558                                           __ptext10 1778  
                                         __ptext11 13AA                                           __ptext12 1600  
                           ADC_Select_Channel@_adc 0046                            Dc_motor_turn_left@F3051 003E  
                          Dc_motor_turn_left@F3053 003D                                           isa$xinst 000000  
             gpio_pin_direction_init@_pin_config_t 0043                       __end_of_gpio_pin_write_logic 12C2  
                         Dc_motor_turn_right@F3060 003B                           Dc_motor_turn_right@F3058 003C  
                     __end_of_ADC_Start_Conversion 1836                             _Application_initialize 170C  
                            _adc_conversion_status 0031                         gpio_pin_direction_init@ret 004B  
                 gpio_pin_read_logic@_pin_config_t 0043                                      _port_register 0001  
                 __end_of_adc_select_result_format 181C  
